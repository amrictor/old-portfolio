{"ast":null,"code":"import _classCallCheck from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\Code\\\\portfolio\\\\portfolio\\\\src\\\\Components\\\\Experience.jsx\";\nimport React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { FaMapMarkerAlt as Location, FaRegCalendarAlt as Date, FaChevronCircleRight as Closed, FaFilePdf as Resume } from 'react-icons/fa';\nimport { FaPython as Python, FaJava as Java, FaJsSquare as JS, FaHtml5 as HTML } from 'react-icons/fa';\nimport { FaGitSquare as Git, FaMicrosoft as Windows, FaLinux as Linux, FaCss3Alt as CSS } from 'react-icons/fa';\nimport { GoTerminal as Bash } from 'react-icons/go';\nimport { CustomCpp as Cpp, CustomUnity as Unity, CustomCsharp as Csharp } from 'react-icons/custom';\nimport resume from '../resources/Resume.pdf';\nimport { jobs, extra } from \"../resources/experience\";\nimport './styles/Experience.scss';\n\nvar Experience =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Experience, _Component);\n\n  function Experience(props) {\n    var _this;\n\n    _classCallCheck(this, Experience);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Experience).call(this, props));\n    _this.state = {\n      languages: false,\n      jobs: false,\n      extra: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Experience, [{\n    key: \"toggle\",\n    value: function toggle(block) {\n      var state = this.state;\n      state[block] = !state[block];\n      this.setState(state);\n    }\n  }, {\n    key: \"experienceBlock\",\n    value: function experienceBlock(job) {\n      var separator = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\");\n      return React.createElement(\"div\", {\n        className: \"experience_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"job_details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, job.company, \" - \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, job.role)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Location, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"\\xA0\", job.location, separator, React.createElement(Date, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"\\xA0\", job.start, \" - \", job.end)), React.createElement(\"div\", {\n        className: \"spacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: job.link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"image\",\n        width: \"150\",\n        height: \"70\",\n        src: job.img,\n        alt: job.company + \" logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, job.description, \" \", job.languages));\n    }\n  }, {\n    key: \"softwareBadge\",\n    value: function softwareBadge(name, icon) {\n      return React.createElement(\"div\", {\n        className: \"badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, icon, React.createElement(\"div\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, name));\n    }\n  }, {\n    key: \"header\",\n    value: function header(text, toggle) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"sectionHeader\",\n        onClick: function onClick() {\n          return toggle !== \"resume\" && _this2.toggle(toggle);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, toggle !== \"resume\" ? React.createElement(Closed, {\n        className: \"show \" + (this.state[toggle] ? \"open\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }) : React.createElement(Resume, {\n        className: \"show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var badges = React.createElement(\"div\", {\n        className: \"badges\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.softwareBadge(\"Java\", React.createElement(Java, {\n        id: \"Java\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"Python\", React.createElement(Python, {\n        id: \"Python\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"C++\", React.createElement(Cpp, {\n        id: \"Cpp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"C#\", React.createElement(Csharp, {\n        id: \"Csharp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \"top\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), this.softwareBadge(\"Javascript\", React.createElement(JS, {\n        id: \"Javascript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"HTML\", React.createElement(HTML, {\n        id: \"HTML5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"CSS\", React.createElement(CSS, {\n        id: \"CSS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), \"top\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), this.softwareBadge(\"Unity\", React.createElement(Unity, {\n        id: \"Unity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"Windows\", React.createElement(Windows, {\n        id: \"Windows\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"Linux\", React.createElement(Linux, {\n        id: \"Linux\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"Shell Script\", React.createElement(Bash, {\n        id: \"ShellScript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \"top\"), this.softwareBadge(\"Git\", React.createElement(Git, {\n        id: \"Git\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), \"top\"));\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.header(\"Languages and Software\", \"languages\"), React.createElement(\"div\", {\n        className: \"hidden \" + (this.state.languages && \"open\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, badges), this.header(\"Professional Experience\", \"jobs\"), React.createElement(\"div\", {\n        className: \"hidden \" + (this.state.jobs && \"open\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, jobs.map(function (job) {\n        return _this3.experienceBlock(job);\n      })), this.header(\"Outside Involvement\", \"extra\"), React.createElement(\"div\", {\n        className: \"hidden \" + (this.state.extra && \"open\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, extra.map(function (extra) {\n        return _this3.experienceBlock(extra);\n      })), this.header(React.createElement(\"a\", {\n        href: resume,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"View PDF Resume\"), \"resume\"));\n    }\n  }]);\n\n  return Experience;\n}(Component);\n\nexport default Experience;","map":{"version":3,"sources":["F:\\Code\\portfolio\\portfolio\\src\\Components\\Experience.jsx"],"names":["React","Component","Container","FaMapMarkerAlt","Location","FaRegCalendarAlt","Date","FaChevronCircleRight","Closed","FaFilePdf","Resume","FaPython","Python","FaJava","Java","FaJsSquare","JS","FaHtml5","HTML","FaGitSquare","Git","FaMicrosoft","Windows","FaLinux","Linux","FaCss3Alt","CSS","GoTerminal","Bash","CustomCpp","Cpp","CustomUnity","Unity","CustomCsharp","Csharp","resume","jobs","extra","Experience","props","state","languages","toggle","bind","block","setState","job","separator","company","role","location","start","end","link","img","description","name","icon","text","badges","softwareBadge","header","map","experienceBlock"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap'\r\n\r\nimport { FaMapMarkerAlt as Location, FaRegCalendarAlt as Date, FaChevronCircleRight as Closed, FaFilePdf as Resume } from 'react-icons/fa'\r\nimport { FaPython as Python, FaJava as Java, FaJsSquare as JS, FaHtml5 as HTML} from 'react-icons/fa'\r\nimport { FaGitSquare as Git, FaMicrosoft as Windows, FaLinux as Linux, FaCss3Alt as CSS} from 'react-icons/fa'\r\nimport { GoTerminal as Bash } from 'react-icons/go'\r\nimport { CustomCpp as Cpp, CustomUnity as Unity, CustomCsharp as Csharp } from 'react-icons/custom'\r\n\r\nimport resume from '../resources/Resume.pdf'\r\n\r\nimport { jobs, extra } from \"../resources/experience\"\r\nimport './styles/Experience.scss'\r\n\r\n\r\nclass Experience extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      languages: false,\r\n      jobs: false,\r\n      extra: false\r\n    }\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle(block){\r\n    let state = this.state;\r\n    state[block] = !state[block];\r\n    this.setState(state);\r\n  }\r\n\r\n  experienceBlock(job) {\r\n    let separator = <React.Fragment>&nbsp;&nbsp;&nbsp;&nbsp;</React.Fragment>\r\n\r\n    return(\r\n      <div className=\"experience_block\">\r\n        <div className = \"job_details\">\r\n          <div>\r\n            <p className=\"lead\">{job.company} - <i>{job.role}</i></p>\r\n            <p><Location/>&nbsp;{job.location}{separator}<Date/>&nbsp;{job.start} - {job.end}</p>\r\n          </div>\r\n          <div className=\"spacer\"/>\r\n          <div>\r\n            <a href={job.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img id=\"image\" width='150' height= '70' src={job.img} alt={job.company + \" logo\"}/>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <p>{job.description} {job.languages}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  softwareBadge(name, icon){\r\n    return (\r\n      <div className=\"badge\">\r\n          {icon}\r\n          <div className=\"label\">{name}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  header(text, toggle) {\r\n    return(\r\n      <div className=\"sectionHeader\" onClick={()=> toggle!==\"resume\" && this.toggle(toggle)}>\r\n        {toggle!==\"resume\" ? <Closed className={\"show \" + (this.state[toggle] ? \"open\" : \"\")}/> : <Resume className=\"show\"/>}\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let badges = \r\n      <div className=\"badges\">\r\n        {this.softwareBadge(\"Java\", <Java id=\"Java\"/>, \"top\")}\r\n        {this.softwareBadge(\"Python\", <Python id=\"Python\"/>, \"top\")}\r\n        {this.softwareBadge(\"C++\", <Cpp id=\"Cpp\"/>, \"top\")}\r\n        {this.softwareBadge(\"C#\", <Csharp id=\"Csharp\"/>, \"top\")}\r\n        <br/>\r\n        {this.softwareBadge(\"Javascript\", <JS id=\"Javascript\"/>, \"top\")}\r\n        {this.softwareBadge(\"HTML\", <HTML id=\"HTML5\"/>, \"top\")}\r\n        {this.softwareBadge(\"CSS\", <CSS id=\"CSS\"/>, \"top\")}\r\n        <br/>\r\n        {this.softwareBadge(\"Unity\", <Unity id=\"Unity\"/>, \"top\")}\r\n        {this.softwareBadge(\"Windows\", <Windows id=\"Windows\"/>, \"top\")}\r\n        {this.softwareBadge(\"Linux\", <Linux id=\"Linux\"/>, \"top\")}\r\n        {this.softwareBadge(\"Shell Script\", <Bash id=\"ShellScript\"/>, \"top\")}\r\n        {this.softwareBadge(\"Git\", <Git id=\"Git\"/>, \"top\")}\r\n      </div>\r\n\r\n    return (\r\n      \r\n      <Container fluid className='page'>\r\n      \r\n        {this.header(\"Languages and Software\", \"languages\")}\r\n        <div className= {\"hidden \" + (this.state.languages && \"open\")} >\r\n          {badges}\r\n        </div>\r\n\r\n        {this.header(\"Professional Experience\", \"jobs\")}\r\n        <div className= {\"hidden \" + (this.state.jobs && \"open\")} >\r\n            {jobs.map((job)=>this.experienceBlock(job))}\r\n        </div>\r\n\r\n        {this.header(\"Outside Involvement\", \"extra\")}\r\n        <div className= {\"hidden \" + (this.state.extra && \"open\")} >\r\n          {extra.map((extra)=>this.experienceBlock(extra))}\r\n        </div>\r\n\r\n        {this.header(<a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">View PDF Resume</a>, \"resume\")}\r\n\r\n    </Container>\r\n    )\r\n  }\r\n}\r\nexport default Experience;"]},"metadata":{},"sourceType":"module"}