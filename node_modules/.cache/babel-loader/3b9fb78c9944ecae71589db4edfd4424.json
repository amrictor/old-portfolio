{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Game\\\\Voting.js\";\nimport React, { Component } from 'react';\nimport { CardBody } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Container } from 'reactstrap';\nimport loading from '../../resources/loadingicon.gif';\nimport '../Project.css'; // import { FaRegCalendarCheck } from 'react-icons/fa';\n\nvar Voting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Voting, _Component);\n\n  function Voting(props) {\n    var _this;\n\n    _classCallCheck(this, Voting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Voting).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Voting, [{\n    key: \"displayQuotes\",\n    value: function displayQuotes() {\n      var _this2 = this;\n\n      var data = [];\n\n      var _loop = function _loop(i) {\n        var index = _this2.props.game.submittedQuotes[i][3]; //index not working!!\n\n        if (index == _this2.props.player.index && !_this2.props.game.results) return \"continue\";\n        var votes = [];\n\n        for (var j = 0; j < _this2.props.game.votes[index]; j++) {\n          votes.push(\"❚\");\n        }\n\n        data.push(React.createElement(Button, {\n          block: true,\n          className: _this2.props.game.results && _this2.props.game.indexOfIt == index ? \"correct\" : \"\",\n          key: \"voting_\" + i,\n          onClick: function onClick() {\n            _this2.props.vote(index, _this2.props.game.indexOfIt === _this2.props.player.index);\n          },\n          disabled: _this2.props.game.results,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, _this2.props.game.indexOfIt === _this2.props.player.index || _this2.props.game.results ? React.createElement(\"div\", {\n          className: \"star\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, _this2.props.game.results ? votes : \"\", \" \", _this2.props.game.bonus[index] ? \"★\" : \"\") : \"\", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, _this2.props.game.submittedQuotes[i][0]), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), _this2.props.game.submittedQuotes[i][1] + \"... \" + _this2.props.game.submittedQuotes[i][2]));\n      };\n\n      for (var i in this.props.game.submittedQuotes) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var waiting = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loading,\n        style: {\n          'display': 'block',\n          'margin': '0 auto'\n        },\n        height: \"45\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text\",\n        style: {\n          'textAlign': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Waiting for other players to vote.\"));\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.game.submitted[this.props.player.index] && !this.props.game.results ? waiting : React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.game.results ? \"❚ = 1 Vote, ★ = Bonus Point\" : this.props.game.indexOfIt === this.props.player.index ? \"Award bonus points to the players' quotes.\" : \"Vote for the quote below which you believe to be the original.\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.displayQuotes()));\n    }\n  }]);\n\n  return Voting;\n}(Component);\n\nexport default Voting;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Game\\Voting.js"],"names":["React","Component","CardBody","Button","Container","loading","Voting","props","state","data","i","index","game","submittedQuotes","player","results","votes","j","push","indexOfIt","vote","bonus","waiting","submitted","displayQuotes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardBody } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container } from 'reactstrap'\r\n\r\nimport loading from '../../resources/loadingicon.gif'\r\nimport '../Project.css'\r\n// import { FaRegCalendarCheck } from 'react-icons/fa';\r\n\r\nclass Voting extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  displayQuotes(){\r\n    let data = [];\r\n    for(let i in this.props.game.submittedQuotes) {\r\n      let index = this.props.game.submittedQuotes[i][3]; //index not working!!\r\n      if(index==this.props.player.index && !this.props.game.results) continue; \r\n      let votes = [];\r\n      for(let j = 0; j<this.props.game.votes[index]; j++) {\r\n        votes.push(\"❚\")\r\n      }\r\n      data.push(\r\n        <Button block\r\n          className={(this.props.game.results && this.props.game.indexOfIt==index) ? \"correct\" : \"\"}\r\n          key={\"voting_\"+i}\r\n          onClick={() => {\r\n            this.props.vote(index, (this.props.game.indexOfIt === this.props.player.index))}}\r\n          disabled={this.props.game.results}\r\n          >\r\n            {((this.props.game.indexOfIt===this.props.player.index )|| this.props.game.results) \r\n            ? <div className=\"star\">{this.props.game.results ? votes : \"\"} {this.props.game.bonus[index] ? \"★\" : \"\"}</div> \r\n            : \"\"}\r\n          <i>{this.props.game.submittedQuotes[i][0]}</i>\r\n          <br/>\r\n          {this.props.game.submittedQuotes[i][1] +\"... \"+ this.props.game.submittedQuotes[i][2]}\r\n        </Button>)\r\n    }\r\n    \r\n    return data;\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className='text' style={{'textAlign': 'center'}}>Waiting for other players to vote.</div>\r\n      </CardBody>\r\n\r\n    return ( \r\n          \r\n      <Container fluid >\r\n        { (this.props.game.submitted[this.props.player.index] && !this.props.game.results) ? \r\n          waiting : \r\n          <CardBody>\r\n            <div className=\"text\"><i>{ (this.props.game.results)\r\n            ? \"❚ = 1 Vote, ★ = Bonus Point\"\r\n            : (this.props.game.indexOfIt === this.props.player.index) \r\n            ? \"Award bonus points to the players' quotes.\"\r\n            : \"Vote for the quote below which you believe to be the original.\" }</i></div>\r\n            <br/>\r\n            {this.displayQuotes()}\r\n          </CardBody>\r\n        }\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Voting;"]},"metadata":{},"sourceType":"module"}