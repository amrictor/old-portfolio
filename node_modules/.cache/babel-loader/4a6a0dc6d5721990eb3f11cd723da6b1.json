{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Application\\\\Map.js\";\nimport React, { Component } from 'react';\nimport Leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Map as LMap, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport { Modal, Container, Row } from 'reactstrap';\n\nvar mapsvg = require('../../public/worldmap.svg');\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      mapClick: false,\n      mapHover: false,\n      scroll: 1,\n      mouseX: 50,\n      mouseY: 50\n    };\n    _this.openMap = _this.openMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"openMap\",\n    value: function openMap() {\n      this.setState({\n        scroll: 1\n      });\n      this.setState({\n        mapClick: !this.state.mapClick\n      });\n    }\n  }, {\n    key: \"generateMap\",\n    value: function generateMap(source) {\n      var bounds = Leaflet.latLngBounds(Leaflet.latLng(90, -180), Leaflet.latLng(-90, 180));\n      var position = [15, -15];\n      return this.props.trip.options.map === 'kml' ? React.createElement(LMap, {\n        ref: \"map\",\n        center: position,\n        zoom: 1,\n        style: {\n          height: 300,\n          maxWidth: 800\n        },\n        minZoom: 1,\n        maxBounds: bounds,\n        onClick: function onClick(e) {\n          return e.target.invalidateSize();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=https://wikimediafoundation.org/wiki/Maps_Terms_of_Use;>Wikimedia Maps</a>\",\n        url: \"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), this.lines()) : React.createElement(\"img\", {\n        style: {\n          'cursor': 'zoom-in'\n        },\n        width: \"100%\",\n        src: source,\n        alt: \"Visual Itinerary Not Available\",\n        onClick: this.openMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"wrapLine\",\n    value: function wrapLine(first, second) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.line(second, first, 360, 0), this.line(second, first, 0, -360), this.marker(second, 360), this.marker(first, -360));\n    }\n  }, {\n    key: \"line\",\n    value: function line(first, second) {\n      var firstOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var secondOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      return React.createElement(Polyline, {\n        positions: [new Leaflet.LatLng(first.latitude, first.longitude + firstOffset), new Leaflet.LatLng(second.latitude, second.longitude + secondOffset)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"marker\",\n    value: function marker(place) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var LeafIcon = LMap.Icon.extend({\n        options: {\n          iconSize: [25, 41],\n          shadowSize: [41, 41],\n          iconAnchor: [12, 41],\n          popupAnchor: [1, -34]\n        }\n      });\n      var greenIcon = new LeafIcon({\n        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png'\n      });\n      return React.createElement(Marker, {\n        position: new Leaflet.LatLng(place.latitude, place.longitude + offset),\n        icon: greenIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, place.name)));\n    }\n  }, {\n    key: \"lines\",\n    value: function lines() {\n      var data = [];\n      var size = this.props.trip.places.length;\n\n      for (var i = 0; i < size; i++) {\n        var first = this.props.trip.places[((i - 1) % size + size) % size];\n        var second = this.props.trip.places[i % size];\n        data.push(React.createElement(React.Fragment, {\n          key: 'place_' + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, this.marker(first), first.longitude - second.longitude < -180.0 ? this.wrapLine(second, first) : first.longitude - second.longitude > 180.0 ? this.wrapLine(first, second) : this.line(first, second)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //don't change to ===\n      var source = this.props.trip.map == null ? mapsvg : \"data:image/svg+xml;utf8,\" + this.props.trip.map;\n      var map = React.createElement(\"img\", {\n        height: \"400px\",\n        width: \"800px\",\n        src: source,\n        alt: \"Visual Itinerary Not Available\",\n        style: {\n          'margin': '0px',\n          'whiteSpace': 'nowrap',\n          'float': 'none'\n        },\n        onWheel: function onWheel(e) {\n          if (e.deltaY < 1) _this2.state.scroll++;else if (e.deltaY > -1) _this2.state.scroll--;\n          if (_this2.state.scroll < 1) _this2.state.scroll = 1;\n\n          _this2.forceUpdate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n      var isMobile = {\n        Android: function Android() {\n          return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function BlackBerry() {\n          return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function iOS() {\n          return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function Opera() {\n          return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function Windows() {\n          return navigator.userAgent.match(/IEMobile/i);\n        },\n        any: function any() {\n          return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();\n        }\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.mapClick,\n        toggle: this.openMap,\n        size: \"lg\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          'overflow': 'hidden'\n        },\n        onMouseMove: function onMouseMove(e) {\n          if (!isMobile.any()) _this2.setState({\n            mouseX: 100 * (e.pageX / window.innerWidth),\n            mouseY: 100 * (e.pageY / window.innerHeight)\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Row, {\n        style: {\n          'transition': 'transform .3s',\n          'transform': this.state.mapHover ? 'scale(1)' : 'scale(' + this.state.scroll + ')',\n          'transformOrigin': this.state.mouseX + '% ' + this.state.mouseY + '%',\n          'overflow': 'hidden',\n          'float': 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, map))), this.generateMap(source));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Application\\Map.js"],"names":["React","Component","Leaflet","Map","LMap","TileLayer","Polyline","Marker","Popup","Modal","Container","Row","mapsvg","require","props","state","mapClick","mapHover","scroll","mouseX","mouseY","openMap","bind","setState","source","bounds","latLngBounds","latLng","position","trip","options","map","height","maxWidth","e","target","invalidateSize","lines","first","second","line","marker","firstOffset","secondOffset","LatLng","latitude","longitude","place","offset","LeafIcon","Icon","extend","iconSize","shadowSize","iconAnchor","popupAnchor","greenIcon","iconUrl","shadowUrl","name","data","size","places","length","i","push","wrapLine","deltaY","forceUpdate","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","pageX","window","innerWidth","pageY","innerHeight","generateMap"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Leaflet from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Map as LMap, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\r\nimport { Modal, Container, Row } from 'reactstrap'\r\n\r\nlet mapsvg = require('../../public/worldmap.svg');\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mapClick: false,\r\n            mapHover: false,\r\n            scroll: 1,\r\n            mouseX: 50,\r\n            mouseY: 50\r\n        };\r\n        this.openMap = this.openMap.bind(this);\r\n\r\n    }\r\n    openMap(){\r\n        this.setState({scroll: 1});\r\n        this.setState({mapClick : !this.state.mapClick});\r\n    }\r\n\r\n    generateMap(source){\r\n        let bounds = Leaflet.latLngBounds(Leaflet.latLng(90, -180), Leaflet.latLng(-90, 180));\r\n        let position = [15, -15];\r\n        return (\r\n            (this.props.trip.options.map === 'kml')\r\n                ? <LMap ref=\"map\" center={position} zoom={1} style={{height: 300, maxWidth: 800}} minZoom={1} maxBounds={bounds} onClick={(e)=>e.target.invalidateSize()}>\r\n                    <TileLayer\r\n                        attribution='&amp;copy <a href=https://wikimediafoundation.org/wiki/Maps_Terms_of_Use;>Wikimedia Maps</a>'\r\n                        url='https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png'\r\n                    />\r\n                    {this.lines()}\r\n                    </LMap>\r\n                : <img\r\n                  style={{'cursor':'zoom-in'}}\r\n                  width=\"100%\"\r\n                  src={source}\r\n                  alt={\"Visual Itinerary Not Available\"}\r\n                  onClick={this.openMap}\r\n                    />\r\n        );\r\n    }\r\n    wrapLine(first, second) {\r\n        return(\r\n            <React.Fragment>\r\n                {this.line(second, first, 360, 0)}\r\n                {this.line(second, first, 0, -360)}\r\n                {this.marker(second, 360)}\r\n                {this.marker(first, -360)}\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n    line(first, second, firstOffset=0, secondOffset=0) {\r\n        return (\r\n        <Polyline positions={[new Leaflet.LatLng(first.latitude, first.longitude+firstOffset),\r\n            new Leaflet.LatLng(second.latitude, second.longitude+secondOffset)]}/>\r\n        )\r\n    }\r\n    marker(place, offset=0) {\r\n        let LeafIcon = LMap.Icon.extend({\r\n            options: {\r\n                iconSize:     [25, 41],\r\n                shadowSize:  [41, 41],\r\n                iconAnchor:   [12, 41],\r\n                popupAnchor:  [1, -34]\r\n            }\r\n        });\r\n        let greenIcon = new LeafIcon({\r\n            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png'\r\n        });\r\n        return(\r\n            <Marker position={new Leaflet.LatLng(place.latitude, place.longitude + offset)} icon={greenIcon}>\r\n                <Popup><b>{place.name}</b></Popup>\r\n            </Marker>\r\n        )\r\n    }\r\n    lines() {\r\n        let data = [];\r\n        let size = this.props.trip.places.length;\r\n        for(let i=0; i<size; i++) {\r\n            let first = this.props.trip.places[(((i-1) % size + size) % size)];\r\n            let second = this.props.trip.places[i % size];\r\n            data.push(\r\n                <React.Fragment key={'place_'+i}>\r\n                    {this.marker(first)}\r\n                    {\r\n                        ((first.longitude-second.longitude)<-180.0)\r\n                        ? this.wrapLine(second, first)\r\n                        : ((first.longitude-second.longitude)>180.0)\r\n                        ? this.wrapLine(first, second)\r\n                        : this.line(first, second)\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n        //don't change to ===\r\n        let source = (this.props.trip.map == null)\r\n                ? mapsvg\r\n                : \"data:image/svg+xml;utf8,\" + this.props.trip.map;\r\n        let map =\r\n            <img\r\n                height=\"400px\"\r\n                width=\"800px\"\r\n                src={source}\r\n                alt={\"Visual Itinerary Not Available\"}\r\n                style={{\r\n                    'margin':'0px',\r\n                    'whiteSpace':'nowrap',\r\n                    'float': 'none'\r\n                }}\r\n                onWheel={(e) => {\r\n                    if(e.deltaY < 1)\r\n                        this.state.scroll++;\r\n                    else if (e.deltaY > -1)\r\n                        this.state.scroll--;\r\n                    if(this.state.scroll<1) this.state.scroll = 1;\r\n                    this.forceUpdate()\r\n                }}\r\n            />;\r\n        const isMobile = {\r\n            Android: function() {\r\n                return navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function() {\r\n                return navigator.userAgent.match(/BlackBerry/i);\r\n            },\r\n            iOS: function() {\r\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: function() {\r\n                return navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function() {\r\n                return navigator.userAgent.match(/IEMobile/i);\r\n            },\r\n            any: function() {\r\n                return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            }\r\n        };\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <Modal isOpen={this.state.mapClick} toggle={this.openMap} size='lg' centered={true}>\r\n                    <Container\r\n                        style={{'overflow' : 'hidden'}}\r\n                        onMouseMove={(e) => { if(!isMobile.any())\r\n                            this.setState(\r\n                                {\r\n                                    mouseX: 100 * (e.pageX  / window.innerWidth),\r\n                                    mouseY: 100 * (e.pageY  / window.innerHeight)\r\n                                });\r\n                        }}\r\n                    >\r\n                        <Row style={\r\n                            {'transition': 'transform .3s',\r\n                            'transform': (this.state.mapHover) ? 'scale(1)' : 'scale('+ this.state.scroll + ')',\r\n                            'transformOrigin': this.state.mouseX + '% '+this.state.mouseY+'%',\r\n                            'overflow': 'hidden',\r\n                            'float': 'none'}\r\n                        }>\r\n                            {map}\r\n                        </Row>\r\n                    </Container>\r\n                </Modal>\r\n                {this.generateMap(source)}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}