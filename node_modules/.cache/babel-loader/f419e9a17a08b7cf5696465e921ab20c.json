{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Application\\\\Itinerary.js\";\nimport React, { Component } from 'react';\nimport { CardTitle } from 'reactstrap';\nimport { Col, Container, Row } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { ButtonGroup } from 'reactstrap';\nimport { Collapse } from 'reactstrap';\nimport { Input, InputGroup } from 'reactstrap';\nimport { Form } from 'reactstrap';\nimport { IconContext } from 'react-icons';\nimport { MdFastRewind, MdDelete, MdExpandLess } from 'react-icons/md';\n\nvar Itinerary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Itinerary, _Component);\n\n  function Itinerary(props) {\n    var _this;\n\n    _classCallCheck(this, Itinerary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Itinerary).call(this, props));\n    _this.state = {\n      itin: true,\n      attributes: JSON.parse(JSON.stringify(_this.props.config.attributes)),\n      total: 0\n    };\n    _this.putData = _this.putData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createTable = _this.createTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleItin = _this.toggleItin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCheckbox = _this.updateCheckbox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Itinerary, [{\n    key: \"toggleItin\",\n    value: function toggleItin() {\n      this.setState({\n        itin: !this.state.itin\n      });\n    }\n  }, {\n    key: \"removePlace\",\n    value: function removePlace(id, name, lat, long) {\n      var place = {\n        'id': id,\n        'name': name,\n        'latitude': lat,\n        'longitude': long\n      };\n      this.props.updatePlaces(place, \"remove\");\n      if (this.props.trip.places.length > 0 && this.props.realTime) this.props.planRequest();else this.props.trip.map = null;\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.props.updateTrip(\"title\", event.target.value);\n    }\n  }, {\n    key: \"putData\",\n    value: function putData() {\n      var _this2 = this;\n\n      this.state.total = 0;\n      var data = [];\n      var size = this.props.trip.places.length;\n\n      if (size !== 0) {\n        if (typeof this.props.trip.distances !== 'undefined') {\n          if (this.props.trip.distances.length !== 0) {\n            var _loop = function _loop(i) {\n              var rowData = [];\n\n              for (var j = 0; j < _this2.state.attributes.length; j++) {\n                var attribute = _this2.state.attributes[j];\n\n                var _size = !_this2.state.attributes.includes('name') ? Math.floor(12 / _this2.state.attributes.length) : attribute === 'name' ? 4 : Math.floor(6 / (_this2.state.attributes.length - 1));\n\n                rowData.push(React.createElement(Col, {\n                  md: _size,\n                  key: _this2.state.attributes[i] + '_' + i + '_' + j,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 61\n                  },\n                  __self: this\n                }, typeof _this2.props.trip.places[i][attribute] === 'number' ? String(Math.round((_this2.props.trip.places[i][attribute] + 0.00001) * 100) / 100) : _this2.props.trip.places[i][attribute]));\n              }\n\n              data.push(React.createElement(React.Fragment, {\n                key: _this2.props.trip.places[i].id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 71\n                },\n                __self: this\n              }, React.createElement(Row, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 72\n                },\n                __self: this\n              }, React.createElement(Col, {\n                xs: '10',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 73\n                },\n                __self: this\n              }, React.createElement(Row, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74\n                },\n                __self: this\n              }, rowData)), React.createElement(Col, {\n                xs: '2',\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }, React.createElement(ButtonGroup, {\n                className: \"float-right\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 79\n                },\n                __self: this\n              }, React.createElement(Button, {\n                key: 'make_first_' + i,\n                className: \"btn-outline-dark unit-button float-right\",\n                onClick: function onClick() {\n                  return _this2.props.updatePlaces(i, \"origin\");\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }, React.createElement(MdExpandLess, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              })), React.createElement(Button, {\n                key: 'add_submit_' + i,\n                className: \"btn-outline-dark unit-button \",\n                onClick: function onClick() {\n                  return _this2.removePlace(_this2.props.trip.places[i].id, _this2.props.trip.places[i].name, _this2.props.trip.places[i].latitude, _this2.props.trip.places[i].longitude);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }, React.createElement(MdDelete, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }))))), React.createElement(Row, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98\n                },\n                __self: this\n              }, React.createElement(React.Fragment, {\n                key: 'distances_' + i,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, React.createElement(Col, {\n                sm: \"12\",\n                md: {\n                  size: 6,\n                  offset: 3\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100\n                },\n                __self: this\n              }, \"Leg Distance: \", React.createElement(\"font\", {\n                color: \"#ff4500\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }, _this2.props.trip.distances[i]), \"\\xA0 Cumulative Distance: \", React.createElement(\"font\", {\n                color: \"#ff4500\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              }, _this2.state.total)))), React.createElement(\"hr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              })));\n              _this2.state.total += _this2.props.trip.distances[i];\n            };\n\n            for (var i = 0; i < size; i++) {\n              _loop(i);\n            }\n          }\n        }\n\n        return data;\n      }\n    }\n  }, {\n    key: \"putHeader\",\n    value: function putHeader() {\n      var data = [];\n\n      for (var i = 0; i < this.state.attributes.length; i++) {\n        var attribute = this.state.attributes[i];\n        var size = !this.state.attributes.includes('name') ? Math.floor(10 / this.state.attributes.length) : attribute === 'name' ? 4 : Math.floor(6 / (this.state.attributes.length - 1));\n        data.push(React.createElement(Col, {\n          md: size,\n          key: attribute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, attribute === 'id' ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var style = {\n        maxHeight: 400,\n        overflowY: \"scroll\"\n      };\n\n      if (typeof this.props.trip.options.units !== \"undefined\") {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: '10',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, this.putHeader())), React.createElement(Col, {\n          xs: '2',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        })), React.createElement(Container, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, this.putData()), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(Row, {\n          key: \"Total\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          md: {\n            size: 4,\n            offset: 4\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Total Distance: \", React.createElement(\"font\", {\n          color: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, this.state.total), \" \", this.props.trip.options.units === 'user defined' ? this.props.trip.options.unitName : this.props.trip.options.units)))));\n      }\n    }\n  }, {\n    key: \"updateCheckbox\",\n    value: function updateCheckbox(event) {\n      var _this3 = this;\n\n      var index = this.state.attributes.indexOf(event.target.name);\n\n      if (index === -1) {\n        this.state.attributes.push(event.target.name);\n      } else {\n        this.state.attributes.splice(index, 1);\n      }\n\n      this.state.attributes.sort(function (a, b) {\n        return _this3.props.config.attributes.indexOf(a) - _this3.props.config.attributes.indexOf(b);\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var toggle = this.state.itin ? \"Hide Itinerary\" : \"Show Itinerary\";\n      var attributes = this.props.config.attributes.slice().reverse().map(function (attribute) {\n        return React.createElement(\"label\", {\n          className: 'float-right',\n          key: 'itinerary_' + attribute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: \"attribute_\" + attribute,\n          name: attribute,\n          type: \"checkbox\",\n          checked: _this4.state.attributes.includes(attribute),\n          onChange: _this4.updateCheckbox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }), attribute === 'id' ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1), \"\\xA0\\xA0\");\n      });\n      return React.createElement(IconContext.Provider, {\n        value: {\n          size: '1.5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Itinerary:\\xA0\\xA0\", React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        id: \"trip_title\",\n        placeholder: \"My Trip\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: 'float-right',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Button, {\n        key: 'options_submit',\n        id: \"options_submit_field\",\n        className: \"btn-outline-dark unit-button float-right\",\n        onClick: function onClick() {\n          return _this4.props.updatePlaces(\"\", \"reverse\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(MdFastRewind, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(Button, {\n        key: \"hide_itin\",\n        id: \"options_hide_itin_field\",\n        className: \"btn-outline-dark unit-button float-right\",\n        onClick: function onClick() {\n          return _this4.toggleItin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, toggle))))), React.createElement(Collapse, {\n        isOpen: this.state.itin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, attributes, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), this.createTable()));\n    }\n  }]);\n\n  return Itinerary;\n}(Component);\n\nexport default Itinerary;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Application\\Itinerary.js"],"names":["React","Component","CardTitle","Col","Container","Row","Button","ButtonGroup","Collapse","Input","InputGroup","Form","IconContext","MdFastRewind","MdDelete","MdExpandLess","Itinerary","props","state","itin","attributes","JSON","parse","stringify","config","total","putData","bind","createTable","toggleItin","updateCheckbox","handleChange","setState","id","name","lat","long","place","updatePlaces","trip","places","length","realTime","planRequest","map","event","updateTrip","target","value","data","size","distances","i","rowData","j","attribute","includes","Math","floor","push","String","round","removePlace","latitude","longitude","offset","charAt","toUpperCase","slice","style","maxHeight","overflowY","options","units","putHeader","unitName","index","indexOf","splice","sort","a","b","forceUpdate","toggle","reverse"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAAQC,KAAR,EAAeC,UAAf,QAAiC,YAAjC;AACA,SAAQC,IAAR,QAAmB,YAAnB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,QAAqD,gBAArD;;IAEMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,UAAU,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,MAAKN,KAAL,CAAWO,MAAX,CAAkBJ,UAAjC,CAAX,CAFH;AAGTK,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,uDAAtB;AACA,UAAKI,YAAL,GAAoB,MAAKA,YAAL,CAAkBJ,IAAlB,uDAApB;AAXe;AAYlB;;;;iCACY;AACT,WAAKK,QAAL,CAAc;AACVb,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,OAAd;AAGH;;;gCAEWc,E,EAAIC,I,EAAMC,G,EAAKC,I,EAAK;AAC5B,UAAMC,KAAK,GAAG;AAAC,cAAMJ,EAAP;AAAW,gBAAQC,IAAnB;AAAyB,oBAAYC,GAArC;AAA0C,qBAAaC;AAAvD,OAAd;AACA,WAAKnB,KAAL,CAAWqB,YAAX,CAAwBD,KAAxB,EAA8B,QAA9B;AACA,UAAK,KAAKpB,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBC,MAAvB,GAA8B,CAA/B,IAAsC,KAAKxB,KAAL,CAAWyB,QAArD,EAAiE,KAAKzB,KAAL,CAAW0B,WAAX,GAAjE,KACK,KAAK1B,KAAL,CAAWsB,IAAX,CAAgBK,GAAhB,GAAoB,IAApB;AACR;;;iCAEYC,K,EAAM;AACf,WAAK5B,KAAL,CAAW6B,UAAX,CAAsB,OAAtB,EAA+BD,KAAK,CAACE,MAAN,CAAaC,KAA5C;AACH;;;8BAES;AAAA;;AACN,WAAK9B,KAAL,CAAWO,KAAX,GAAiB,CAAjB;AACA,UAAIwB,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAG,KAAKjC,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBC,MAAlC;;AACA,UAAIS,IAAI,KAAK,CAAb,EAAgB;AACZ,YAAI,OAAO,KAAKjC,KAAL,CAAWsB,IAAX,CAAgBY,SAAvB,KAAqC,WAAzC,EAAsD;AAClD,cAAI,KAAKlC,KAAL,CAAWsB,IAAX,CAAgBY,SAAhB,CAA0BV,MAA1B,KAAqC,CAAzC,EAA4C;AAAA,uCAC/BW,CAD+B;AAEpC,kBAAIC,OAAO,GAAG,EAAd;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAACpC,KAAL,CAAWE,UAAX,CAAsBqB,MAA1C,EAAkDa,CAAC,EAAnD,EAAuD;AACnD,oBAAIC,SAAS,GAAG,MAAI,CAACrC,KAAL,CAAWE,UAAX,CAAsBkC,CAAtB,CAAhB;;AACA,oBAAIJ,KAAI,GAAG,CAAC,MAAI,CAAChC,KAAL,CAAWE,UAAX,CAAsBoC,QAAtB,CAA+B,MAA/B,CAAD,GACLC,IAAI,CAACC,KAAL,CAAW,KAAM,MAAI,CAACxC,KAAL,CAAWE,UAAX,CAAsBqB,MAAvC,CADK,GAEJc,SAAS,KAAK,MAAf,GACI,CADJ,GAEIE,IAAI,CAACC,KAAL,CAAW,KAAK,MAAI,CAACxC,KAAL,CAAWE,UAAX,CAAsBqB,MAAtB,GAA+B,CAApC,CAAX,CAJV;;AAKAY,gBAAAA,OAAO,CAACM,IAAR,CACI,oBAAC,GAAD;AAAK,kBAAA,EAAE,EAAET,KAAT;AAAe,kBAAA,GAAG,EAAE,MAAI,CAAChC,KAAL,CAAWE,UAAX,CAAsBgC,CAAtB,IAA2B,GAA3B,GAAiCA,CAAjC,GAAqC,GAArC,GAA2CE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAES,OAAO,MAAI,CAACrC,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BG,SAA1B,CAAP,KAAgD,QAAjD,GACMK,MAAM,CAACH,IAAI,CAACI,KAAL,CAAW,CAAC,MAAI,CAAC5C,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BG,SAA1B,IAAuC,OAAxC,IAAmD,GAA9D,IAAqE,GAAtE,CADZ,GAEM,MAAI,CAACtC,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BG,SAA1B,CAJd,CADJ;AASH;;AACDN,cAAAA,IAAI,CAACU,IAAL,CACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,gBAAA,GAAG,EAAE,MAAI,CAAC1C,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BnB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACKoB,OADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,MAAD;AACI,gBAAA,GAAG,EAAE,gBAAgBD,CADzB;AAEI,gBAAA,SAAS,EAAC,0CAFd;AAGI,gBAAA,OAAO,EAAE;AAAA,yBAAM,MAAI,CAACnC,KAAL,CAAWqB,YAAX,CAAwBc,CAAxB,EAA2B,QAA3B,CAAN;AAAA,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,EASI,oBAAC,MAAD;AACI,gBAAA,GAAG,EAAE,gBAAgBA,CADzB;AAEI,gBAAA,SAAS,EAAC,+BAFd;AAGI,gBAAA,OAAO,EAAE;AAAA,yBAAM,MAAI,CAACU,WAAL,CAAiB,MAAI,CAAC7C,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BnB,EAA3C,EAA+C,MAAI,CAAChB,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BlB,IAAzE,EAA+E,MAAI,CAACjB,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BW,QAAzG,EAAmH,MAAI,CAAC9C,KAAL,CAAWsB,IAAX,CAAgBC,MAAhB,CAAuBY,CAAvB,EAA0BY,SAA7I,CAAN;AAAA,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CATJ,CADJ,CANJ,CADJ,EA2BI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,gBAAA,GAAG,EAAE,eAAeZ,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,GAAD;AAAK,gBAAA,EAAE,EAAC,IAAR;AAAa,gBAAA,EAAE,EAAE;AAACF,kBAAAA,IAAI,EAAE,CAAP;AAAUe,kBAAAA,MAAM,EAAE;AAAlB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACkB;AACd,gBAAA,KAAK,EAAC,SADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACG,MAAI,CAAChD,KAAL,CAAWsB,IAAX,CAAgBY,SAAhB,CAA0BC,CAA1B,CADH,CADlB,gCAGyB;AAAM,gBAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuB,MAAI,CAAClC,KAAL,CAAWO,KAAlC,CAHzB,CADJ,CADJ,CA3BJ,EAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ,CADJ;AAwCA,cAAA,MAAI,CAACP,KAAL,CAAWO,KAAX,IAAoB,MAAI,CAACR,KAAL,CAAWsB,IAAX,CAAgBY,SAAhB,CAA0BC,CAA1B,CAApB;AA5DoC;;AACxC,iBAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;AAAA,oBAAtBA,CAAsB;AA4D9B;AACJ;AACJ;;AACD,eAAOH,IAAP;AACH;AACJ;;;gCAEW;AACR,UAAIA,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlC,KAAL,CAAWE,UAAX,CAAsBqB,MAA1C,EAAkDW,CAAC,EAAnD,EAAuD;AACnD,YAAIG,SAAS,GAAG,KAAKrC,KAAL,CAAWE,UAAX,CAAsBgC,CAAtB,CAAhB;AACA,YAAIF,IAAI,GAAG,CAAC,KAAKhC,KAAL,CAAWE,UAAX,CAAsBoC,QAAtB,CAA+B,MAA/B,CAAD,GACLC,IAAI,CAACC,KAAL,CAAW,KAAI,KAAKxC,KAAL,CAAWE,UAAX,CAAsBqB,MAArC,CADK,GAEJc,SAAS,KAAG,MAAb,GACI,CADJ,GAEIE,IAAI,CAACC,KAAL,CAAW,KAAG,KAAKxC,KAAL,CAAWE,UAAX,CAAsBqB,MAAtB,GAA6B,CAAhC,CAAX,CAJV;AAKAQ,QAAAA,IAAI,CAACU,IAAL,CACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAET,IAAT;AAAe,UAAA,GAAG,EAAEK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMA,SAAS,KAAG,IAAb,GAAqB,IAArB,GAA4BA,SAAS,CAACW,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCZ,SAAS,CAACa,KAAV,CAAgB,CAAhB,CADrE,CADJ;AAKH;;AACD,aAAOnB,IAAP;AACH;;;kCAGY;AACT,UAAMoB,KAAK,GAAG;AACVC,QAAAA,SAAS,EAAE,GADD;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAd;;AAIA,UAAG,OAAO,KAAKtD,KAAL,CAAWsB,IAAX,CAAgBiC,OAAhB,CAAwBC,KAA/B,KAAyC,WAA5C,EAAyD;AACrD,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKC,SAAL,EADL,CADJ,CADJ,EAMI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CADJ,EAaI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEL,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAK3C,OAAL,EADL,CAbJ,EAgBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAa,UAAA,EAAE,EAAE;AAACwB,YAAAA,IAAI,EAAE,CAAP;AAAUe,YAAAA,MAAM,EAAE;AAAlB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAmB;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqB,KAAK/C,KAAL,CAAWO,KAAhC,CAAnB,OAAmE,KAAKR,KAAL,CAAWsB,IAAX,CAAgBiC,OAAhB,CAAwBC,KAAxB,KAAgC,cAAjC,GAAmD,KAAKxD,KAAL,CAAWsB,IAAX,CAAgBiC,OAAhB,CAAwBG,QAA3E,GAAsF,KAAK1D,KAAL,CAAWsB,IAAX,CAAgBiC,OAAhB,CAAwBC,KAAhL,CADJ,CADJ,CADJ,CAhBJ,CADJ;AA0BH;AACJ;;;mCAEc5B,K,EAAM;AAAA;;AACjB,UAAI+B,KAAK,GAAG,KAAK1D,KAAL,CAAWE,UAAX,CAAsByD,OAAtB,CAA8BhC,KAAK,CAACE,MAAN,CAAab,IAA3C,CAAZ;;AAEA,UAAG0C,KAAK,KAAK,CAAC,CAAd,EAAiB;AACb,aAAK1D,KAAL,CAAWE,UAAX,CAAsBuC,IAAtB,CAA2Bd,KAAK,CAACE,MAAN,CAAab,IAAxC;AACH,OAFD,MAGK;AACD,aAAKhB,KAAL,CAAWE,UAAX,CAAsB0D,MAAtB,CAA6BF,KAA7B,EAAoC,CAApC;AACH;;AAED,WAAK1D,KAAL,CAAWE,UAAX,CAAsB2D,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACvB,MAAI,CAAChE,KAAL,CAAWO,MAAX,CAAkBJ,UAAlB,CAA6ByD,OAA7B,CAAqCG,CAArC,IAA0C,MAAI,CAAC/D,KAAL,CAAWO,MAAX,CAAkBJ,UAAlB,CAA6ByD,OAA7B,CAAqCI,CAArC,CADnB;AAAA,OAA3B;AAIA,WAAKC,WAAL;AACH;;;6BAEQ;AAAA;;AACL,UAAIC,MAAM,GAAG,KAAKjE,KAAL,CAAWC,IAAX,GAAkB,gBAAlB,GAAqC,gBAAlD;AACA,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWO,MAAX,CAAkBJ,UAAlB,CAA6BgD,KAA7B,GAAqCgB,OAArC,GAA+CxC,GAA/C,CAAmD,UAACW,SAAD;AAAA,eAClE;AAAO,UAAA,SAAS,EAAE,aAAlB;AAAiC,UAAA,GAAG,EAAE,eAAcA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,GAAG,EAAE,eAAaA,SADtB;AAEI,UAAA,IAAI,EAAEA,SAFV;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,OAAO,EAAE,MAAI,CAACrC,KAAL,CAAWE,UAAX,CAAsBoC,QAAtB,CAA+BD,SAA/B,CAJb;AAKI,UAAA,QAAQ,EAAE,MAAI,CAACzB,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAQMyB,SAAS,KAAG,IAAb,GAAqB,IAArB,GAA4BA,SAAS,CAACW,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCZ,SAAS,CAACa,KAAV,CAAgB,CAAhB,CARrE,aADkE;AAAA,OAAnD,CAAnB;AAeA,aACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAElB,UAAAA,IAAI,EAAE;AAAR,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,EAAE,EAAC,YAHP;AAII,QAAA,WAAW,EAAC,SAJhB;AAKI,QAAA,QAAQ,EAAE,KAAKnB,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CAFJ,CADJ,EAgBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,GAAG,EAAE,gBADT;AAEI,QAAA,EAAE,EAAC,sBAFP;AAGI,QAAA,SAAS,EAAC,0CAHd;AAII,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAI,CAACd,KAAL,CAAWqB,YAAX,CAAwB,EAAxB,EAA2B,SAA3B,CAAL;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,EAUI,oBAAC,MAAD;AACI,QAAA,GAAG,EAAC,WADR;AAEI,QAAA,EAAE,EAAC,yBAFP;AAGI,QAAA,SAAS,EAAC,0CAHd;AAII,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACT,UAAL,EAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMKsD,MANL,CAVJ,CADJ,CAhBJ,CADR,CAFJ,EA2CQ,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKjE,KAAL,CAAWC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,UADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAIK,KAAKQ,WAAL,EAJL,CA3CR,CADJ;AAoDH;;;;EAtPmB3B,S;;AAyPxB,eAAee,SAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport { CardTitle } from 'reactstrap'\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport { Button } from 'reactstrap'\r\nimport { ButtonGroup } from 'reactstrap';\r\nimport { Collapse } from 'reactstrap';\r\nimport {Input, InputGroup } from 'reactstrap'\r\nimport {Form} from 'reactstrap';\r\nimport {IconContext} from 'react-icons';\r\nimport { MdFastRewind, MdDelete, MdExpandLess } from 'react-icons/md'\r\n\r\nclass Itinerary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itin: true,\r\n            attributes: JSON.parse(JSON.stringify(this.props.config.attributes)),\r\n            total: 0\r\n        };\r\n        this.putData = this.putData.bind(this);\r\n        this.createTable = this.createTable.bind(this);\r\n        this.toggleItin = this.toggleItin.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    toggleItin() {\r\n        this.setState({\r\n            itin: !this.state.itin\r\n        });\r\n    }\r\n\r\n    removePlace(id, name, lat, long){\r\n        const place = {'id': id, 'name': name, 'latitude': lat, 'longitude': long};\r\n        this.props.updatePlaces(place,\"remove\");\r\n        if( (this.props.trip.places.length>0) && (this.props.realTime) ) this.props.planRequest();\r\n        else this.props.trip.map=null;\r\n    }\r\n\r\n    handleChange(event){\r\n        this.props.updateTrip(\"title\", event.target.value);\r\n    }\r\n\r\n    putData() {\r\n        this.state.total=0;\r\n        let data = [];\r\n        let size = this.props.trip.places.length;\r\n        if (size !== 0) {\r\n            if (typeof this.props.trip.distances !== 'undefined') {\r\n                if (this.props.trip.distances.length !== 0) {\r\n                    for (let i = 0; i < size; i++) {\r\n                        let rowData = [];\r\n                        for (let j = 0; j < this.state.attributes.length; j++) {\r\n                            let attribute = this.state.attributes[j];\r\n                            let size = !this.state.attributes.includes('name')\r\n                                ? Math.floor(12 / (this.state.attributes.length))\r\n                                : (attribute === 'name')\r\n                                    ? 4\r\n                                    : Math.floor(6 / (this.state.attributes.length - 1));\r\n                            rowData.push(\r\n                                <Col md={size} key={this.state.attributes[i] + '_' + i + '_' + j}>\r\n                                    {\r\n                                        (typeof this.props.trip.places[i][attribute] === 'number')\r\n                                            ? String(Math.round((this.props.trip.places[i][attribute] + 0.00001) * 100) / 100)\r\n                                            : this.props.trip.places[i][attribute]\r\n                                    }\r\n                                </Col>\r\n                            );\r\n                        }\r\n                        data.push(\r\n                            <React.Fragment key={this.props.trip.places[i].id}>\r\n                                <Row>\r\n                                    <Col xs={'10'}>\r\n                                        <Row>\r\n                                            {rowData}\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={'2'}>\r\n                                        <ButtonGroup className='float-right'>\r\n                                            <Button\r\n                                                key={'make_first_' + i}\r\n                                                className='btn-outline-dark unit-button float-right'\r\n                                                onClick={() => this.props.updatePlaces(i, \"origin\")}\r\n                                            >\r\n                                                <MdExpandLess/>\r\n                                            </Button>\r\n\r\n                                            <Button\r\n                                                key={'add_submit_' + i}\r\n                                                className='btn-outline-dark unit-button '\r\n                                                onClick={() => this.removePlace(this.props.trip.places[i].id, this.props.trip.places[i].name, this.props.trip.places[i].latitude, this.props.trip.places[i].longitude)}\r\n                                            >\r\n                                                <MdDelete/>\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <React.Fragment key={'distances_' + i}>\r\n                                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                                            Leg Distance: <font\r\n                                            color=\"#ff4500\">{this.props.trip.distances[i]}</font>&nbsp;\r\n                                            Cumulative Distance: <font color=\"#ff4500\">{this.state.total}</font>\r\n                                        </Col>\r\n                                    </React.Fragment>\r\n                                </Row>\r\n                                <hr/>\r\n                            </React.Fragment>\r\n                        );\r\n                        this.state.total += this.props.trip.distances[i];\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n    putHeader() {\r\n        let data = [];\r\n        for (let i = 0; i < this.state.attributes.length; i++) {\r\n            let attribute = this.state.attributes[i];\r\n            let size = !this.state.attributes.includes('name')\r\n                ? Math.floor(10/(this.state.attributes.length))\r\n                : (attribute==='name')\r\n                    ? 4\r\n                    : Math.floor(6/(this.state.attributes.length-1));\r\n            data.push(\r\n                <Col md={size} key={attribute}>\r\n                    {(attribute==='id') ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)}\r\n                </Col>\r\n            );\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n    createTable(){\r\n        const style = {\r\n            maxHeight: 400,\r\n            overflowY: \"scroll\"\r\n        };\r\n        if(typeof this.props.trip.options.units !== \"undefined\") {\r\n            return (\r\n                <React.Fragment>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={'10'}>\r\n                                <Row>\r\n                                    {this.putHeader()}\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={'2'}/>\r\n                        </Row>\r\n                        <hr/>\r\n                    </Container>\r\n\r\n                    <Container style={style}>\r\n                        {this.putData()}\r\n                    </Container>\r\n                    <Container>\r\n                        <Row key=\"Total\">\r\n                            <Col sm=\"12\" md={{size: 4, offset: 4}}>\r\n                                <b>Total Distance: <font color=\"green\">{this.state.total}</font> {(this.props.trip.options.units==='user defined') ? this.props.trip.options.unitName : this.props.trip.options.units}</b>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    updateCheckbox(event){\r\n        let index = this.state.attributes.indexOf(event.target.name);\r\n\r\n        if(index === -1) {\r\n            this.state.attributes.push(event.target.name);\r\n        }\r\n        else {\r\n            this.state.attributes.splice(index, 1);\r\n        }\r\n\r\n        this.state.attributes.sort((a, b) =>\r\n            this.props.config.attributes.indexOf(a) - this.props.config.attributes.indexOf(b)\r\n        );\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        let toggle = this.state.itin ? \"Hide Itinerary\" : \"Show Itinerary\";\r\n        const attributes = this.props.config.attributes.slice().reverse().map((attribute) =>\r\n            <label className={'float-right'} key={'itinerary_' +attribute}>\r\n                <input\r\n                    key={\"attribute_\"+attribute}\r\n                    name={attribute}\r\n                    type=\"checkbox\"\r\n                    checked={this.state.attributes.includes(attribute)}\r\n                    onChange={this.updateCheckbox}\r\n                />\r\n                {(attribute==='id') ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)}\r\n                &nbsp;&nbsp;\r\n            </label>\r\n        );\r\n\r\n\r\n        return (\r\n            <IconContext.Provider value={{ size: '1.5em' }}>\r\n\r\n                <CardTitle>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n\r\n                                <Form inline>\r\n                                    Itinerary:&nbsp;&nbsp;\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"title\"\r\n                                            id=\"trip_title\"\r\n                                            placeholder=\"My Trip\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form>\r\n                            </Col>\r\n                            <Col>\r\n                                <ButtonGroup className={'float-right'}>\r\n                                    <Button\r\n                                        key={'options_submit'}\r\n                                        id='options_submit_field'\r\n                                        className='btn-outline-dark unit-button float-right'\r\n                                        onClick={()=> this.props.updatePlaces(\"\",\"reverse\")}\r\n                                    >\r\n                                        <MdFastRewind/>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        key='hide_itin'\r\n                                        id='options_hide_itin_field'\r\n                                        className='btn-outline-dark unit-button float-right'\r\n                                        onClick={() => this.toggleItin()}\r\n                                    >\r\n                                        {toggle}\r\n                                    </Button>\r\n\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row></CardTitle>\r\n\r\n                    <Collapse isOpen={this.state.itin}>\r\n                        {attributes}\r\n                        <br/>\r\n                        <hr/>\r\n                        {this.createTable()}\r\n                    </Collapse>\r\n            </IconContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Itinerary;"]},"metadata":{},"sourceType":"module"}