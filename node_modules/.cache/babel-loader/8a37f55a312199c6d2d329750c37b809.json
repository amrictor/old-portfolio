{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Game\\\\Writing.js\";\nimport React, { Component } from 'react';\nimport { CardBody, CardTitle } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Container, Input, Form, InputGroupAddon } from 'reactstrap';\nimport loading from '../../resources/loadingicon.gif';\nimport '../Project.css';\n\nvar Writing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Writing, _Component);\n\n  function Writing(props) {\n    var _this;\n\n    _classCallCheck(this, Writing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Writing).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Writing, [{\n    key: \"displayQuotes\",\n    value: function displayQuotes() {\n      var quotes = [[\"Origin\", \"Quote 1\"], [\"Origin\", \"Quote 2\"], [\"Origin\", \"Quote 3\"]];\n      var data = [];\n\n      for (var i = 0; i < quotes.length; i++) {\n        data.push(React.createElement(Button, {\n          block: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, quotes[i][0]), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), quotes[i][1]));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"screen\",\n    value: function screen() {\n      var waiting = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loading,\n        style: {\n          'display': 'block',\n          'margin': '0 auto'\n        },\n        height: \"45\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(CardTitle, {\n        style: {\n          'textAlign': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Waiting for \", this.props.game.players[this.props.game.indexOfIt], \" to choose a quote.\"));\n      var quotes = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Choose one of the following quotes.\"), this.displayQuotes());\n      return this.props.game.indexOfIt === this.props.player.index ? quotes : waiting;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var waiting = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loading,\n        style: {\n          'display': 'block',\n          'margin': '0 auto'\n        },\n        height: \"45\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text\",\n        style: {\n          'textAlign': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Waiting for other players to complete their quotes.\"));\n      var quote = this.props.game.quote;\n      var writing = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Finish the quote below and fool other players into believing yours is the original!\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \"Do your best to make your quote sound authentic.\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, quote[0]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), quote[1], \"...\"), React.createElement(Form, {\n        inline: true,\n        className: \"centered full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"username\",\n        type: \"text\",\n        placeholder: \"...\",\n        onChange: function onChange(e) {\n          return _this2.props.writeQuote(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"join\",\n        onClick: function onClick() {\n          _this2.props.choose(_this2.props.player.quote);\n\n          wait = true;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Submit\")));\n      var wait = this.props.game.indexOfIt === this.props.player.index || this.props.game.submitted[this.props.player.index];\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, wait ? waiting : writing);\n    }\n  }]);\n\n  return Writing;\n}(Component);\n\nexport default Writing;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Game\\Writing.js"],"names":["React","Component","CardBody","CardTitle","Button","Container","Input","Form","InputGroupAddon","loading","Writing","props","state","quotes","data","i","length","push","waiting","game","players","indexOfIt","displayQuotes","player","index","quote","writing","e","writeQuote","target","value","choose","wait","submitted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardBody, CardTitle } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container, Input, Form, InputGroupAddon } from 'reactstrap'\r\n\r\nimport loading from '../../resources/loadingicon.gif'\r\nimport '../Project.css'\r\n\r\nclass Writing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  displayQuotes(){\r\n    let quotes = [ [\"Origin\",\"Quote 1\"], [\"Origin\",\"Quote 2\"], [\"Origin\",\"Quote 3\"]];\r\n    let data = [];\r\n    for (let i = 0; i<quotes.length; i++){\r\n      data.push(\r\n        <Button block>\r\n          <i>{quotes[i][0]}</i>\r\n          <br/>\r\n          {quotes[i][1]}\r\n        </Button>\r\n      )\r\n    }\r\n    return data;\r\n  }\r\n  screen() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <CardTitle style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</CardTitle>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <CardTitle>Choose one of the following quotes.</CardTitle>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n    return(\r\n      (this.props.game.indexOfIt === this.props.player.index)\r\n      ? quotes\r\n      : waiting\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className=\"text\" style={{'textAlign': 'center'}}>Waiting for other players to complete their quotes.</div>\r\n      </CardBody>\r\n    let quote = this.props.game.quote;\r\n    const writing =\r\n      <CardBody>\r\n        <div className=\"text\">\r\n          <i>Finish the quote below and fool other players into believing yours is the original!<br/>Do your best to make your quote sound authentic.</i>\r\n        </div>\r\n        <br/>\r\n        <div className=\"text\">\r\n          <i>{quote[0]}</i>\r\n          <br/>\r\n          {quote[1]}...\r\n        </div>\r\n        <Form inline className=\"centered full\">\r\n          <Input \r\n            id=\"username\"\r\n            type='text'\r\n            placeholder='...'\r\n            onChange={(e) => this.props.writeQuote(e.target.value)}\r\n          />\r\n          <br/><br/><br/>\r\n          <Button\r\n            className=\"join\"\r\n            onClick={() =>{ this.props.choose(this.props.player.quote); wait=true;}}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </CardBody>\r\n    \r\n    let wait = (this.props.game.indexOfIt === this.props.player.index) || (this.props.game.submitted[this.props.player.index]);\r\n    return (\r\n      <Container fluid >\r\n        { wait\r\n          ? waiting\r\n          : writing}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Writing;"]},"metadata":{},"sourceType":"module"}