{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Application\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { CardTitle } from 'reactstrap';\nimport { Col, Container, Row } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Collapse } from 'reactstrap';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { IconContext } from 'react-icons';\nimport { MdSearch, MdClear, MdAdd } from 'react-icons/md';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    _this.state = {\n      search: {\n        version: 4,\n        type: \"search\",\n        match: \"\",\n        filters: JSON.parse(JSON.stringify(_this.props.config.filters.slice())),\n        limit: 15,\n        found: 4,\n        places: []\n      },\n      query_f: \"\",\n      isSearch: false,\n      attributes: JSON.parse(JSON.stringify(_this.props.config.attributes)),\n      numFilters: _this.props.config.filters.reduce(function (total, filter) {\n        return total + filter.values.length;\n      }, 0),\n      dropdownOpen: _this.props.config.filters.map(function () {\n        return false;\n      }),\n      counter: 0\n    };\n    _this.updateBasedOnResponse = _this.updateBasedOnResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showSearchResult = _this.showSearchResult.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCheckbox = _this.updateCheckbox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateAttributes = _this.updateAttributes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"toggle\",\n    value: function toggle(index) {\n      var copy = this.state.dropdownOpen;\n\n      for (var i = 0; i < this.state.dropdownOpen.length; i++) {\n        if (i === index) copy[i] = !this.state.dropdownOpen[i];else copy[i] = false;\n      }\n\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: copy\n        };\n      });\n    }\n  }, {\n    key: \"updateSearch\",\n    value: function updateSearch() {\n      var search = this.state.search;\n      this.setState({\n        query_f: search['match']\n      });\n      this.setState(search);\n    }\n  }, {\n    key: \"updateBasedOnResponse\",\n    value: function updateBasedOnResponse(value) {\n      this.setState({\n        'search': value\n      });\n    }\n  }, {\n    key: \"showSearchResult\",\n    value: function showSearchResult() {\n      if (this.state.numFilters < 1) {\n        alert('You cannot conduct a search with no filters!');\n        return;\n      } // if(this.state.search.match === \"\") return;\n      // request(this.state.search, 'search', this.props.port, this.props.host).then(response => {\n      //     this.updateBasedOnResponse(response)\n      // });\n\n\n      this.updateBasedOnResponse({\n        version: 4,\n        type: \"search\",\n        match: \"SAMPLE\",\n        filters: JSON.parse(JSON.stringify(this.props.config.filters.slice())),\n        limit: 15,\n        found: 4,\n        places: [{\n          \"id\": \"argn\",\n          \"name\": \"Argentina\",\n          \"latitude\": -38.4161,\n          \"longitude\": -63.6167\n        }, {\n          \"id\": \"cair\",\n          \"name\": \"Cairo\",\n          \"latitude\": 30.0444,\n          \"longitude\": 31.2357\n        }, {\n          \"id\": \"auck\",\n          \"name\": \"Auckland\",\n          \"latitude\": -36.8485,\n          \"longitude\": 174.7633\n        }, {\n          \"id\": \"foco\",\n          \"name\": \"Fort Collins\",\n          \"latitude\": 40.585258,\n          \"longitude\": -105.084419\n        }]\n      });\n      this.setState({\n        isSearch: true\n      });\n    }\n  }, {\n    key: \"closeSearch\",\n    value: function closeSearch() {\n      this.state.query_f = \"\";\n      this.updateSearch();\n      this.setState({\n        isSearch: false\n      });\n    }\n  }, {\n    key: \"addPlace\",\n    value: function addPlace(id, name, lat, long) {\n      alert(\"This page is only a demo and lacks all server functionality!\");\n      var place = {\n        'id': id,\n        'name': name,\n        'latitude': lat,\n        'longitude': long\n      };\n      this.props.updatePlaces(place, \"add\"); //if (this.props.realTime) this.props.planRequest();\n    }\n  }, {\n    key: \"putData\",\n    value: function putData() {\n      var _this2 = this;\n\n      var data = [];\n\n      var _loop = function _loop(i) {\n        var rowData = [];\n\n        for (var j = 0; j < _this2.state.attributes.length; j++) {\n          var attribute = _this2.state.attributes[j];\n          var size = !_this2.state.attributes.includes('name') ? Math.floor(12 / _this2.state.attributes.length) : attribute === 'name' ? 4 : Math.floor(8 / (_this2.state.attributes.length - 1));\n          rowData.push(React.createElement(Col, {\n            md: size,\n            key: _this2.state.attributes[i] + '_' + i + '_' + j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, typeof _this2.state.search.places[i][attribute] === 'number' ? String(Math.round((_this2.state.search.places[i][attribute] + 0.00001) * 100) / 100) : _this2.state.search.places[i][attribute]));\n        }\n\n        data.push(React.createElement(React.Fragment, {\n          key: _this2.state.search.places[i].id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: '10',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, rowData)), React.createElement(Col, {\n          xs: '2',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Button, {\n          key: 'add_submit',\n          className: \"btn-outline unit-button float-right\",\n          onClick: function onClick() {\n            return _this2.addPlace(_this2.state.search.places[i].id, _this2.state.search.places[i].name, _this2.state.search.places[i].latitude, _this2.state.search.places[i].longitude);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(MdAdd, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        })))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })));\n        if (i === _this2.state.search.limit) return \"break\";\n      };\n\n      for (var i = 0; i < this.state.search.places.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"break\") break;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"putHeader\",\n    value: function putHeader() {\n      var data = [];\n\n      for (var i = 0; i < this.state.attributes.length; i++) {\n        var attribute = this.state.attributes[i];\n        var size = !this.state.attributes.includes('name') ? Math.floor(12 / this.state.attributes.length) : attribute === 'name' ? 4 : Math.floor(8 / (this.state.attributes.length - 1));\n        data.push(React.createElement(Col, {\n          md: size,\n          key: attribute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, attribute === 'id' ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"searchResults\",\n    value: function searchResults() {\n      var style = {\n        maxHeight: 400,\n        overflowY: \"scroll\"\n      };\n\n      if (typeof this.state.search !== \"undefined\" && typeof this.state.search.places !== \"undefined\") {\n        if (this.state.search.places.length > 0) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, React.createElement(Container, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: '10',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, this.putHeader())), React.createElement(Col, {\n            xs: '2',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          })), React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          })), React.createElement(Container, {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, this.putData()), React.createElement(\"div\", {\n            key: \"total\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, React.createElement(\"h6\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }), React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, \"Showing\\xA0\", React.createElement(\"font\", {\n            color: \"green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, this.state.search.limit < this.state.search.found ? this.state.search.limit : this.state.search.found), \"\\xA0of\\xA0\", React.createElement(\"font\", {\n            color: \"green\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, this.state.search.found), \"\\xA0results found.\"))));\n        }\n      }\n\n      return \"No results available.\";\n    }\n  }, {\n    key: \"updateCheckbox\",\n    value: function updateCheckbox(event, filter) {\n      console.log(event.target.name);\n      console.log(this.state.search.filters);\n      var index = this.state.search.filters.indexOf(this.state.search.filters.find(function (filt) {\n        return filt.name === filter;\n      }));\n      var valIndex = this.state.search.filters[index].values.indexOf(event.target.name);\n\n      if (valIndex === -1) {\n        this.state.search.filters[index].values.push(event.target.name);\n        this.state.numFilters++;\n      } else {\n        this.state.search.filters[index].values.splice(valIndex, 1);\n        this.state.numFilters--;\n      }\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes(event) {\n      var _this3 = this;\n\n      var index = this.state.attributes.indexOf(event.target.name);\n\n      if (index === -1) {\n        this.state.attributes.push(event.target.name);\n      } else {\n        this.state.attributes.splice(index, 1);\n      }\n\n      this.state.attributes.sort(function (a, b) {\n        return _this3.props.config.attributes.indexOf(a) - _this3.props.config.attributes.indexOf(b);\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(value, filter) {\n      if (typeof this.state.search.filters === 'undefined') this.state.search.filters = [];\n      var obj = this.state.search.filters.find(function (filt) {\n        return filt.name === filter;\n      });\n      if (typeof obj === 'undefined') return false;\n      return obj[\"values\"].indexOf(value) !== -1;\n    }\n  }, {\n    key: \"listenForEnter\",\n    value: function listenForEnter(event) {\n      if (event.keyCode === 13) this.showSearchResult();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var filters = this.props.config.filters.map(function (filter) {\n        return React.createElement(React.Fragment, {\n          key: filter.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(UncontrolledDropdown, {\n          isOpen: _this4.state.dropdownOpen[_this4.props.config.filters.indexOf(filter)],\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(DropdownToggle, {\n          caret: true,\n          className: \"btn-outline unit-button\",\n          toggle: false,\n          onClick: function onClick() {\n            return _this4.toggle(_this4.props.config.filters.indexOf(filter));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, filter.name.charAt(0).toUpperCase() + filter.name.slice(1)), React.createElement(DropdownMenu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, filter.values.map(function (value) {\n          return React.createElement(DropdownItem, {\n            key: filter.name + '_' + value,\n            name: value,\n            toggle: false,\n            onClick: function onClick(event) {\n              return _this4.updateCheckbox(event, filter.name);\n            },\n            active: _this4.contains(value, filter.name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, value.charAt(0).toUpperCase() + value.slice(1) + \" \");\n        }))), \"\\xA0\");\n      });\n      var searchquery = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"query\",\n        id: \"query_field\",\n        placeholder: \"Search\",\n        onChange: function onChange() {\n          return _this4.updateSearch();\n        },\n        onKeyDown: function onKeyDown(event) {\n          return _this4.listenForEnter(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), \"\\xA0\", React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Button, {\n        key: 'show_search_submit',\n        className: \"btn-outline unit-button\",\n        onClick: function onClick() {\n          return _this4.showSearchResult();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(MdSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Button, {\n        key: 'close_search_submit',\n        className: \"btn-outline unit-button\",\n        onClick: function onClick() {\n          return _this4.closeSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(MdClear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      })))));\n      var attributes = this.props.config.attributes.slice().reverse().map(function (attribute) {\n        return React.createElement(\"label\", {\n          className: 'float-right',\n          key: 'search_' + attribute,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          key: \"attribute_\" + attribute,\n          name: attribute,\n          type: \"checkbox\",\n          checked: _this4.state.attributes.includes(attribute),\n          onChange: _this4.updateAttributes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }), attribute === 'id' ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1), \"\\xA0\\xA0\");\n      });\n      return React.createElement(IconContext.Provider, {\n        value: {\n          size: '1.3em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Click the magnifying glass to show results for a pre-determined sample of locations.\")), React.createElement(Row, {\n        className: 'float-right',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, filters), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), searchquery, React.createElement(Collapse, {\n        isOpen: this.state.isSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, attributes), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), this.searchResults()));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Application\\Search.js"],"names":["React","Component","CardTitle","Col","Container","Row","Button","Collapse","Input","InputGroup","InputGroupAddon","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","IconContext","MdSearch","MdClear","MdAdd","Search","props","state","search","version","type","match","filters","JSON","parse","stringify","config","slice","limit","found","places","query_f","isSearch","attributes","numFilters","reduce","total","filter","values","length","dropdownOpen","map","counter","updateBasedOnResponse","bind","showSearchResult","updateCheckbox","updateAttributes","toggle","index","copy","i","setState","prevState","value","alert","updateSearch","id","name","lat","long","place","updatePlaces","data","rowData","j","attribute","size","includes","Math","floor","push","String","round","addPlace","latitude","longitude","charAt","toUpperCase","style","maxHeight","overflowY","putHeader","putData","event","console","log","target","indexOf","find","filt","valIndex","splice","forceUpdate","sort","a","b","obj","keyCode","contains","searchquery","listenForEnter","closeSearch","reverse","searchResults"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardTitle } from 'reactstrap';\r\nimport { Col, Container, Row } from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\nimport { Collapse } from 'reactstrap';\r\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap'\r\nimport {UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\r\nimport {IconContext} from 'react-icons';\r\nimport { MdSearch, MdClear, MdAdd } from 'react-icons/md'\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: {\r\n                version: 4,\r\n                type: \"search\",\r\n                match: \"\",\r\n                filters: JSON.parse(JSON.stringify(this.props.config.filters.slice())),\r\n                limit: 15,\r\n                found: 4,\r\n                places: []\r\n            },\r\n            query_f : \"\",\r\n            isSearch: false,\r\n            attributes: JSON.parse(JSON.stringify(this.props.config.attributes)),\r\n            numFilters: this.props.config.filters.reduce((total, filter) =>  total + filter.values.length, 0),\r\n            dropdownOpen: this.props.config.filters.map(() => false),\r\n            counter: 0\r\n\r\n        };\r\n        this.updateBasedOnResponse = this.updateBasedOnResponse.bind(this);\r\n        this.showSearchResult = this.showSearchResult.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.updateAttributes = this.updateAttributes.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(index) {\r\n        let copy = this.state.dropdownOpen;\r\n        for(let i=0; i<this.state.dropdownOpen.length; i++){\r\n            if(i===index) copy[i]=!this.state.dropdownOpen[i];\r\n            else copy[i]=false;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            dropdownOpen: copy\r\n        }));\r\n    }\r\n\r\n    updateSearch() {\r\n        let search = this.state.search;\r\n        this.setState({query_f: search['match']});\r\n        this.setState(search)\r\n    }\r\n    updateBasedOnResponse(value) {\r\n        this.setState({'search': value});\r\n    }\r\n    showSearchResult(){\r\n        if(this.state.numFilters < 1) {\r\n            alert('You cannot conduct a search with no filters!');\r\n            return;\r\n        }\r\n        // if(this.state.search.match === \"\") return;\r\n        \r\n        // request(this.state.search, 'search', this.props.port, this.props.host).then(response => {\r\n        //     this.updateBasedOnResponse(response)\r\n        // });\r\n        \r\n        this.updateBasedOnResponse(\r\n            {\r\n                version: 4,\r\n                type: \"search\",\r\n                match: \"SAMPLE\",\r\n                filters: JSON.parse(JSON.stringify(this.props.config.filters.slice())),\r\n                limit: 15,\r\n                found: 4,\r\n                places: [{\"id\":\"argn\",\"name\":\"Argentina\",\"latitude\":-38.4161,\"longitude\":-63.6167},\r\n                         {\"id\":\"cair\",\"name\":\"Cairo\",\"latitude\":30.0444,\"longitude\":31.2357},\r\n                         {\"id\":\"auck\",\"name\":\"Auckland\",\"latitude\":-36.8485,\"longitude\":174.7633},\r\n                         {\"id\":\"foco\",\"name\":\"Fort Collins\",\"latitude\":40.585258,\"longitude\":-105.084419}]\r\n            }\r\n        )\r\n        this.setState({ isSearch: true });\r\n    }\r\n    closeSearch() {\r\n        this.state.query_f = \"\";\r\n        this.updateSearch();\r\n        this.setState({ isSearch: false });\r\n    }\r\n    addPlace(id, name, lat, long){\r\n        alert(\"This page is only a demo and lacks all server functionality!\")\r\n        const place = {'id': id, 'name': name, 'latitude': lat, 'longitude': long};\r\n        this.props.updatePlaces(place,\"add\");\r\n        //if (this.props.realTime) this.props.planRequest();\r\n    }\r\n    putData(){\r\n        let data = [];\r\n        for (let i = 0; i < this.state.search.places.length; i++){\r\n            let rowData = [];\r\n            for (let j = 0; j < this.state.attributes.length; j++) {\r\n                let attribute = this.state.attributes[j];\r\n                let size = !this.state.attributes.includes('name')\r\n                    ? Math.floor(12/(this.state.attributes.length))\r\n                    : (attribute==='name')\r\n                        ? 4\r\n                        : Math.floor(8/(this.state.attributes.length-1));\r\n                rowData.push(\r\n                    <Col md={size} key={this.state.attributes[i]+'_'+i+'_'+j}>\r\n                        {\r\n                            (typeof this.state.search.places[i][attribute] === 'number')\r\n                                ? String(Math.round((this.state.search.places[i][attribute]+ 0.00001) * 100)/100)\r\n                                : this.state.search.places[i][attribute]\r\n                        }\r\n                    </Col>\r\n                );\r\n            }\r\n\r\n            data.push(\r\n                <React.Fragment key={this.state.search.places[i].id}>\r\n                <Row>\r\n                    <Col xs={'10'}>\r\n                        <Row>\r\n                            {rowData}\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={'2'}>\r\n                        <Button\r\n                            key={'add_submit'}\r\n                            className='btn-outline unit-button float-right'\r\n                            onClick={() => this.addPlace(this.state.search.places[i].id, this.state.search.places[i].name, this.state.search.places[i].latitude, this.state.search.places[i].longitude)}\r\n                        >\r\n                            <MdAdd/>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n                </React.Fragment>\r\n            );\r\n\r\n            if(i===this.state.search.limit) break;\r\n        }\r\n        return data;\r\n    }\r\n    putHeader() {\r\n        let data = [];\r\n        for (let i = 0; i < this.state.attributes.length; i++) {\r\n            let attribute = this.state.attributes[i];\r\n            let size = !this.state.attributes.includes('name')\r\n                ? Math.floor(12/(this.state.attributes.length))\r\n                : (attribute==='name')\r\n                    ? 4\r\n                    : Math.floor(8/(this.state.attributes.length-1));\r\n            data.push(\r\n                <Col md={size} key={attribute}>\r\n                    {(attribute==='id') ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)}\r\n                </Col>\r\n            );\r\n        }\r\n        return data;\r\n    }\r\n\r\n    searchResults() {\r\n        const style = {\r\n            maxHeight: 400,\r\n            overflowY: \"scroll\"\r\n        };\r\n        if (typeof this.state.search !== \"undefined\" && typeof this.state.search.places !== \"undefined\") {\r\n            if (this.state.search.places.length > 0) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={'10'}>\r\n                                    <Row>\r\n                                        {this.putHeader()}\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs={'2'}/>\r\n                            </Row>\r\n                            <hr/>\r\n                        </Container>\r\n                        <Container style={style}>\r\n                            {this.putData()}\r\n                        </Container>\r\n                        <div key = 'total'>\r\n                            <h6>\r\n                                <br/>\r\n                                <strong>\r\n                                    Showing&nbsp;\r\n                                    <font color=\"green\">{(this.state.search.limit < this.state.search.found)\r\n                                        ? this.state.search.limit\r\n                                        : this.state.search.found}</font>\r\n                                    &nbsp;of&nbsp;\r\n                                    <font color=\"green\">{this.state.search.found}</font>\r\n                                    &nbsp;results found.\r\n                                </strong>\r\n                            </h6>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n        return \"No results available.\"\r\n    }\r\n    updateCheckbox(event, filter){\r\n        console.log(event.target.name)\r\n        console.log(this.state.search.filters)\r\n        let index = this.state.search.filters.indexOf(this.state.search.filters.find(filt => filt.name === filter));\r\n        let valIndex = this.state.search.filters[index].values.indexOf(event.target.name);\r\n\r\n        if(valIndex === -1) {\r\n            this.state.search.filters[index].values.push(event.target.name);\r\n            this.state.numFilters++;\r\n        }\r\n        else {\r\n            this.state.search.filters[index].values.splice(valIndex, 1);\r\n            this.state.numFilters--;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateAttributes(event){\r\n        let index = this.state.attributes.indexOf(event.target.name);\r\n\r\n        if(index === -1) {\r\n            this.state.attributes.push(event.target.name);\r\n        }\r\n        else {\r\n            this.state.attributes.splice(index, 1);\r\n        }\r\n\r\n        this.state.attributes.sort((a, b) =>\r\n            this.props.config.attributes.indexOf(a) - this.props.config.attributes.indexOf(b)\r\n        );\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    contains(value, filter){\r\n        if(typeof this.state.search.filters === 'undefined') this.state.search.filters = [];\r\n        let obj = this.state.search.filters.find(filt => filt.name === filter);\r\n        if (typeof obj === 'undefined') return false;\r\n        return (obj[\"values\"].indexOf(value) !== -1);\r\n    }\r\n\r\n    listenForEnter(event) {\r\n        if (event.keyCode === 13)\r\n            this.showSearchResult();\r\n    }\r\n\r\n\r\n    render() {\r\n        const filters = this.props.config.filters.map((filter) =>\r\n                <React.Fragment key={filter.name}>\r\n                    <UncontrolledDropdown isOpen={this.state.dropdownOpen[this.props.config.filters.indexOf(filter)]} size=\"sm\" >\r\n                        <DropdownToggle caret className='btn-outline unit-button'  toggle={false} onClick={() => this.toggle(this.props.config.filters.indexOf(filter))}>\r\n                            {filter.name.charAt(0).toUpperCase() + filter.name.slice(1)}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {filter.values.map((value) =>\r\n                                <DropdownItem\r\n                                    key={filter.name+'_'+value}\r\n                                    name={value}\r\n                                    toggle={false}\r\n                                    onClick={(event) => this.updateCheckbox(event, filter.name)}\r\n                                    active={this.contains(value, filter.name)}\r\n                                >\r\n                                    {value.charAt(0).toUpperCase() + value.slice(1) + \" \"}\r\n                                </DropdownItem>\r\n                            )}\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                    &nbsp;\r\n                </React.Fragment>\r\n\r\n        );\r\n\r\n\r\n        const searchquery=\r\n            <React.Fragment>\r\n                    <InputGroup>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"query\"\r\n                            id=\"query_field\"\r\n                            placeholder=\"Search\"\r\n                            onChange={()=>this.updateSearch()}\r\n                            onKeyDown={(event)=>this.listenForEnter(event)}\r\n                        />\r\n                        &nbsp;\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button\r\n                                key={'show_search_submit'}\r\n                                className='btn-outline unit-button'\r\n                                onClick={()=> this.showSearchResult()}\r\n                            >\r\n                                <MdSearch/>\r\n                            </Button>\r\n                        </InputGroupAddon>\r\n\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <Button\r\n                                key={'close_search_submit'}\r\n                                className='btn-outline unit-button'\r\n                                onClick={()=> this.closeSearch()}\r\n                            >\r\n                                <MdClear/>\r\n                            </Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n            </React.Fragment>;\r\n\r\n        const attributes = this.props.config.attributes.slice().reverse().map((attribute) =>\r\n            <label className={'float-right'} key={'search_' + attribute}>\r\n                <input\r\n                    key={\"attribute_\"+attribute}\r\n                    name={attribute}\r\n                    type=\"checkbox\"\r\n                    checked={this.state.attributes.includes(attribute)}\r\n                    onChange={this.updateAttributes}\r\n                />\r\n                {(attribute==='id') ? 'ID' : attribute.charAt(0).toUpperCase() + attribute.slice(1)}\r\n                &nbsp;&nbsp;\r\n            </label>\r\n        );\r\n\r\n        return (\r\n            <IconContext.Provider value={{ size: '1.3em' }}>\r\n                <CardTitle><i>Click the magnifying glass to show results for a pre-determined sample of locations.</i></CardTitle>\r\n                <Row className={'float-right'}>{filters}</Row>\r\n                <br/><br/>\r\n\r\n                {searchquery}\r\n                <Collapse isOpen={this.state.isSearch}>\r\n                    <br/>\r\n                    <Container>\r\n                        {attributes}\r\n                    </Container>\r\n                    <br/>\r\n                    <hr/>\r\n                    {this.searchResults()}\r\n                </Collapse>\r\n            </IconContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}