{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Application\\\\Options.js\";\nimport React, { Component } from 'react';\nimport { ButtonGroup, Button, Card, CardBody, CardHeader, CardTitle, Container, Form, FormGroup, Label } from 'reactstrap';\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { Collapse } from 'reactstrap';\n/* Options allows the user to change the parameters for planning\r\n * and rendering the trip map and itinerary.\r\n * The options reside in the parent object so they may be shared with the Trip object.\r\n * Allows the user to set the options used by the application via a set of buttons.\r\n */\n\nvar Options =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Options, _Component);\n\n  function Options(props) {\n    var _this;\n\n    _classCallCheck(this, Options);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Options).call(this, props));\n    _this.state = {\n      userDef: false,\n      name: \"\",\n      radius: 0,\n      host: \"\",\n      port: 0\n    };\n    _this.handleChangeHost = _this.handleChangeHost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangePort = _this.handleChangePort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeName = _this.handleChangeName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeRadius = _this.handleChangeRadius.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Options, [{\n    key: \"updateUnits\",\n    value: function updateUnits(event) {\n      var unit = event.target.value;\n      this.props.updateOptions('units', event.target.value);\n      this.setState({\n        userDef: unit === 'user defined'\n      });\n    }\n  }, {\n    key: \"userDefValues\",\n    value: function userDefValues() {\n      if (this.state.name === \"\" && this.state.radius === 0) return;\n      this.props.updateOptions('unitName', this.state.name);\n      this.props.updateOptions('unitRadius', this.state.radius);\n    }\n  }, {\n    key: \"handleKeyDotPress\",\n    value: function handleKeyDotPress(event) {\n      if (event.key === '.') {\n        event.preventDefault();\n        alert('Please enter an integer.');\n      }\n    }\n  }, {\n    key: \"handleChangeHost\",\n    value: function handleChangeHost(event) {\n      this.setState({\n        'host': event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangePort\",\n    value: function handleChangePort(event) {\n      this.setState({\n        port: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeName\",\n    value: function handleChangeName(event) {\n      this.setState({\n        name: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeRadius\",\n    value: function handleChangeRadius(event) {\n      this.setState({\n        radius: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var unitButtons = this.props.config.units.map(function (units) {\n        return React.createElement(Button, {\n          key: 'distance_button_' + units,\n          id: \"options_submit_units_field\",\n          className: \"btn-outline unit-button\",\n          active: _this2.props.options.units === units,\n          value: units,\n          onClick: function onClick(event) {\n            return _this2.updateUnits(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, units.charAt(0).toUpperCase() + units.slice(1));\n      });\n      var optButtons = this.props.config.optimization.map(function (opt) {\n        return React.createElement(Button, {\n          key: opt['label'],\n          id: \"options_submit_opts_field\",\n          className: \"btn-outline unit-button\",\n          active: _this2.props.options.optimization === opt['label'],\n          value: opt['label'],\n          onClick: function onClick(event) {\n            return _this2.props.updateOptions('optimization', event.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, opt['label'].charAt(0).toUpperCase() + opt['label'].slice(1));\n      });\n      var mapButtons = this.props.config.maps.map(function (map) {\n        return React.createElement(Button, {\n          key: map,\n          id: \"options_submit_maps_field\",\n          className: \"btn-outline unit-button\",\n          active: _this2.props.options.map === map,\n          value: map,\n          onClick: function onClick(event) {\n            return _this2.props.updateOptions('map', event.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, map === 'svg' ? \"Static\" : \"Interactive\");\n      });\n      var truefalse = [true, false];\n      var realTimeButtons = truefalse.map(function (rT) {\n        return React.createElement(Button, {\n          key: rT,\n          id: \"options_submit_rT_field\",\n          className: \"btn-outline unit-button\",\n          active: _this2.props.realTime === rT,\n          value: rT,\n          onClick: function onClick(event) {\n            return _this2.props.updateRealTime(event.target.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, rT === true ? \"True\" : \"False\");\n      });\n      var portForm = React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"host\",\n        id: \"host_field\",\n        placeholder: \"(Optional) black-bottle.cs.colostate.edu\",\n        onChange: this.handleChangeHost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \":\")), React.createElement(Input, {\n        type: \"number\",\n        name: \"port\",\n        id: \"port_field\",\n        placeholder: \"port\",\n        onKeyPress: this.handleKeyDotPress,\n        onChange: this.handleChangePort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"\\xA0\", React.createElement(Button, {\n        key: 'options_submit_hostport',\n        id: 'options_submit_hostport_field',\n        className: \"btn-outline unit-button\",\n        onClick: function onClick() {\n          return _this2.props.updateHostAndPort(_this2.state.host, _this2.state.port);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Submit\"))));\n      var userdeffield = React.createElement(Collapse, {\n        isOpen: this.state.userDef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"unitname\",\n        id: \"unit_name_field\",\n        placeholder: \"Unit name\",\n        onChange: this.handleChangeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"number\",\n        name: \"unitradius\",\n        id: \"unit_radius_field\",\n        placeholder: \"Earth radius\",\n        onChange: this.handleChangeRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"\\xA0\", React.createElement(Button, {\n        key: 'options_submit_userdefunits',\n        id: \"options_submit_userdefunits_field\",\n        className: \"btn-outline unit-button\",\n        onClick: function onClick() {\n          return _this2.userDefValues();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Submit\")))));\n      return React.createElement(Container, {\n        id: \"Options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Options\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Real time trip editing:\"), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, realTimeButtons), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Select the units you wish to use:\")), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, unitButtons), userdeffield, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Select your desired map output:\")), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, mapButtons)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Select your preferred optimization:\")), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, optButtons)), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Use a different server and/or port:\")), portForm));\n    }\n  }]);\n\n  return Options;\n}(Component);\n\nexport default Options;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Application\\Options.js"],"names":["React","Component","ButtonGroup","Button","Card","CardBody","CardHeader","CardTitle","Container","Form","FormGroup","Label","Input","InputGroup","InputGroupAddon","InputGroupText","Collapse","Options","props","state","userDef","name","radius","host","port","handleChangeHost","bind","handleChangePort","handleChangeName","handleChangeRadius","event","unit","target","value","updateOptions","setState","key","preventDefault","alert","unitButtons","config","units","map","options","updateUnits","charAt","toUpperCase","slice","optButtons","optimization","opt","mapButtons","maps","truefalse","realTimeButtons","rT","realTime","updateRealTime","portForm","handleKeyDotPress","updateHostAndPort","userdeffield","userDefValues"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {ButtonGroup, Button, Card, CardBody, CardHeader, CardTitle, Container, Form, FormGroup, Label} from 'reactstrap'\r\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\r\nimport {Collapse} from 'reactstrap'\r\n\r\n/* Options allows the user to change the parameters for planning\r\n * and rendering the trip map and itinerary.\r\n * The options reside in the parent object so they may be shared with the Trip object.\r\n * Allows the user to set the options used by the application via a set of buttons.\r\n */\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userDef: false,\r\n            name : \"\",\r\n            radius : 0,\r\n            host : \"\",\r\n            port : 0\r\n        };\r\n        this.handleChangeHost = this.handleChangeHost.bind(this);\r\n        this.handleChangePort = this.handleChangePort.bind(this);\r\n        this.handleChangeName = this.handleChangeName.bind(this);\r\n        this.handleChangeRadius = this.handleChangeRadius.bind(this);\r\n    }\r\n\r\n    updateUnits(event) {\r\n        const unit = event.target.value;\r\n        this.props.updateOptions('units', event.target.value);\r\n        this.setState({userDef:(unit === 'user defined')});\r\n    }\r\n\r\n    userDefValues() {\r\n        if (this.state.name === \"\" && this.state.radius === 0) return;\r\n        this.props.updateOptions('unitName', this.state.name);\r\n        this.props.updateOptions('unitRadius', this.state.radius);\r\n    }\r\n\r\n    handleKeyDotPress(event) {\r\n        if(event.key === '.'){\r\n            event.preventDefault();\r\n            alert('Please enter an integer.');\r\n        }\r\n    }\r\n\r\n    handleChangeHost(event) {\r\n        this.setState({'host': event.target.value});\r\n    }\r\n\r\n\r\n    handleChangePort(event) {\r\n        this.setState({port: event.target.value});\r\n    }\r\n\r\n    handleChangeName(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n\r\n    handleChangeRadius(event) {\r\n        this.setState({radius: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const unitButtons = this.props.config.units.map((units) =>\r\n            <Button\r\n                key={'distance_button_' + units}\r\n                id='options_submit_units_field'\r\n                className='btn-outline unit-button'\r\n                active={this.props.options.units === units}\r\n                value={units}\r\n                onClick={(event) => this.updateUnits(event)}\r\n            >\r\n                {units.charAt(0).toUpperCase() + units.slice(1)}\r\n            </Button>\r\n        );\r\n        const optButtons = this.props.config.optimization.map((opt) =>\r\n            <Button\r\n                key={opt['label']}\r\n                id='options_submit_opts_field'\r\n                className='btn-outline unit-button'\r\n                active={this.props.options.optimization === opt['label']}\r\n                value={opt['label']}\r\n                onClick={(event) => this.props.updateOptions('optimization', event.target.value)}\r\n            >\r\n                {opt['label'].charAt(0).toUpperCase() + opt['label'].slice(1)}\r\n            </Button>\r\n        );\r\n        const mapButtons = this.props.config.maps.map((map) =>\r\n            <Button\r\n                key={map}\r\n                id='options_submit_maps_field'\r\n                className='btn-outline unit-button'\r\n                active={this.props.options.map === map}\r\n                value={map}\r\n                onClick={(event) => this.props.updateOptions('map', event.target.value)}\r\n            >\r\n                {(map==='svg' ? \"Static\" : \"Interactive\")}\r\n            </Button>\r\n        );\r\n        const truefalse = [true, false];\r\n        const realTimeButtons = truefalse.map((rT) =>\r\n            <Button\r\n                key={rT}\r\n                id='options_submit_rT_field'\r\n                className='btn-outline unit-button'\r\n                active={this.props.realTime === rT}\r\n                value={rT}\r\n                onClick={(event) => this.props.updateRealTime(event.target.value)}\r\n            >\r\n                {(rT===true ? \"True\" : \"False\")}\r\n            </Button>\r\n        );\r\n\r\n        const portForm =\r\n            <Form inline>\r\n                <InputGroup>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"host\"\r\n                        id=\"host_field\"\r\n                        placeholder=\"(Optional) black-bottle.cs.colostate.edu\"\r\n                        onChange= {this.handleChangeHost}\r\n                    />\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>:</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"port\"\r\n                        id=\"port_field\"\r\n                        placeholder=\"port\"\r\n                        onKeyPress={this.handleKeyDotPress}\r\n                        onChange= {this.handleChangePort}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        &nbsp;\r\n                        <Button\r\n                            key={'options_submit_hostport'}\r\n                            id={'options_submit_hostport_field'}\r\n                            className='btn-outline unit-button'\r\n                            onClick={() => this.props.updateHostAndPort(this.state.host, this.state.port)}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </Form>;\r\n\r\n        const userdeffield =\r\n            <Collapse isOpen={this.state.userDef}>\r\n                <br/>\r\n                <Form inline>\r\n                    <InputGroup>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"unitname\"\r\n                            id=\"unit_name_field\"\r\n                            placeholder=\"Unit name\"\r\n                            onChange= {this.handleChangeName}\r\n                        />\r\n                        <Input\r\n                            type=\"number\"\r\n                            name=\"unitradius\"\r\n                            id=\"unit_radius_field\"\r\n                            placeholder=\"Earth radius\"\r\n                            onChange= {this.handleChangeRadius}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            &nbsp;\r\n                            <Button\r\n                                key={'options_submit_userdefunits'}\r\n                                id='options_submit_userdefunits_field'\r\n                                className='btn-outline unit-button'\r\n                                onClick={() => this.userDefValues()}\r\n                            >\r\n                                Submit\r\n                            </Button>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Collapse>;\r\n\r\n        return (\r\n                <Container id={\"Options\"}>\r\n                    <CardBody>\r\n                        <CardTitle>Options</CardTitle>\r\n                        <hr/>\r\n                        <b>Real time trip editing:</b>\r\n                        <ButtonGroup>{realTimeButtons}</ButtonGroup>\r\n                        <p><b>Select the units you wish to use:</b></p>\r\n                        <ButtonGroup>{unitButtons}</ButtonGroup>\r\n                        {userdeffield}\r\n                        <p><b>Select your desired map output:</b></p>\r\n                        <ButtonGroup>{mapButtons}</ButtonGroup>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                        \r\n                    </CardBody>\r\n                    <CardBody>\r\n                        \r\n                    </CardBody>\r\n                    <CardBody>\r\n                        \r\n                    </CardBody>\r\n                    <CardBody>\r\n                        <p><b>Select your preferred optimization:</b></p>\r\n                        <ButtonGroup>{optButtons}</ButtonGroup>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                        <p><b>Use a different server and/or port:</b></p>\r\n                        {portForm}\r\n                    </CardBody>\r\n                </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Options;"]},"metadata":{},"sourceType":"module"}