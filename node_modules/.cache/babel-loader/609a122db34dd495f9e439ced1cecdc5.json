{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Marginals\\\\Navigation.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Navbar, Nav, NavItem, NavLink as ReactNavLink, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport './css/navbar.css';\n\nvar Navigation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navigation, _Component);\n\n  function Navigation(props) {\n    var _this;\n\n    _classCallCheck(this, Navigation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Navigation).call(this, props));\n    _this.state = {\n      isOpen: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.collapsable = _this.collapsable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getToggler = _this.getToggler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderNavItem = _this.renderNavItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Navigation, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"getToggler\",\n    value: function getToggler() {\n      if (!this.state.isOpen) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"\\u2630\");else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"\\u268A\");\n    }\n    /**\r\n     * Renders the mobile navigation bar.  This will also update the webpage title\r\n     *      to the correct heading.  The \"homepage\" has a different name than the\r\n     *      other items.  Hence the additional logic.\r\n     * @param href weblink to bind to the name.\r\n     * @param clickable link true if the link redirects to another site.\r\n     * @param index of the mapping\r\n     * @param menu menu name\r\n     * @param title of the nav bar item.\r\n     * @returns {XML} of the nav bar item.\r\n     */\n\n  }, {\n    key: \"renderNavItem\",\n    value: function renderNavItem(href, clickable, index, menu, title) {\n      var _this2 = this;\n\n      var toLink = index === 0 ? '/' : menu.replace(/\\s+/g, '-').toLowerCase(); // true if link redirects user.\n\n      var navLink = clickable ? React.createElement(ReactNavLink, {\n        className: \"dropdown_item\",\n        href: href,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, title) : React.createElement(NavLink, {\n        to: toLink,\n        exact: true,\n        className: \"dropdown_item nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: function onClick(e) {\n          return _this2.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, title));\n      return React.createElement(NavItem, {\n        key: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, navLink);\n    }\n  }, {\n    key: \"collapsable\",\n    value: function collapsable() {\n      var toggler = this.getToggler();\n      var navItems = [this.renderNavItem(\"\", false, 0, \"TripCo\", \"TripCo\")];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        className: \"nav_side_bar\",\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"dropdown_icon\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", toggler), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, navItems))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"application-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Navigation;\n}(Component);\n\nexport default Navigation;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Marginals\\Navigation.js"],"names":["React","Component","Collapse","Navbar","Nav","NavItem","NavLink","ReactNavLink","Button","Navigation","props","state","isOpen","toggle","bind","collapsable","getToggler","renderNavItem","setState","href","clickable","index","menu","title","toLink","replace","toLowerCase","navLink","e","toggler","navItems"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Collapse, Navbar, Nav, NavItem, NavLink as ReactNavLink, Button} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './css/navbar.css';\r\n\r\nclass Navigation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.collapsable = this.collapsable.bind(this);\r\n    this.getToggler = this.getToggler.bind(this);\r\n\r\n    this.renderNavItem = this.renderNavItem.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  getToggler(){\r\n    if (!this.state.isOpen)return (<div>&#x2630;</div>);\r\n    else return (<div>&#x268A;</div>);\r\n  }\r\n\r\n  /**\r\n   * Renders the mobile navigation bar.  This will also update the webpage title\r\n   *      to the correct heading.  The \"homepage\" has a different name than the\r\n   *      other items.  Hence the additional logic.\r\n   * @param href weblink to bind to the name.\r\n   * @param clickable link true if the link redirects to another site.\r\n   * @param index of the mapping\r\n   * @param menu menu name\r\n   * @param title of the nav bar item.\r\n   * @returns {XML} of the nav bar item.\r\n   */\r\n  renderNavItem(href, clickable, index, menu, title) {\r\n    const toLink = (index === 0) ? '/' : menu.replace(/\\s+/g, '-').toLowerCase();\r\n    // true if link redirects user.\r\n    let navLink = (clickable)\r\n        ? (<ReactNavLink className=\"dropdown_item\" href={href} target=\"_blank\">{title}</ReactNavLink>)\r\n        : (<NavLink to={toLink} exact className=\"dropdown_item nav-link\">\r\n               <div onClick={(e) => this.toggle()}>{title}</div>\r\n           </NavLink>);\r\n    return ( <NavItem key={title}>{ navLink }</NavItem> );\r\n  }\r\n\r\n  collapsable(){\r\n    let toggler = this.getToggler();\r\n    const navItems = [\r\n      this.renderNavItem(\"\", false, 0, \"TripCo\", \"TripCo\" )\r\n    ];\r\n    return(\r\n      <div>\r\n        <Navbar className=\"nav_side_bar\" light>\r\n          <Button className=\"dropdown_icon\" onClick={this.toggle}> {toggler}</Button>\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {navItems}\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n\r\n      <div className=\"application-width\">\r\n        <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Navigation;\r\n"]},"metadata":{},"sourceType":"module"}