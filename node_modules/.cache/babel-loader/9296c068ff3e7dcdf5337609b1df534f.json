{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Game\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { CardBody, Collapse, Form } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Container, Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport '../Project.css';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {};\n    _this.displayPlayers = _this.displayPlayers.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.join = _this.join.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.leave = _this.leave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.start = _this.start.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"contains\",\n    value: function contains(a, obj) {\n      var i = a.length;\n\n      while (i--) {\n        if (a[i].valueOf() === obj.valueOf()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"join\",\n    value: function join() {\n      console.log(username.target); // this.props.updateGameBasedOnResponse('username', e.target.value)\n\n      if (this.props.player.username.length === 0) {\n        alert(\"Please choose a username.\");\n        return;\n      }\n\n      console.log(\"Joining game as \" + this.props.player.username);\n      var request = {\n        'type': 'request',\n        'action': 'join',\n        'name': this.props.player.username\n      };\n      this.props.connection.send(JSON.stringify(request));\n      this.props.toggleInGame();\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      console.log(this.props.player.username + \" is leaving the game.\");\n      var request = {\n        'type': 'request',\n        'action': 'leave',\n        'name': this.props.player.username,\n        'index': this.props.player.index\n      };\n      this.props.updateGameBasedOnResponse('index', -1);\n      this.props.connection.send(JSON.stringify(request));\n      this.props.setCookie(\"\", \"\", -1);\n      this.props.toggleInGame();\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      console.log(\"The game is starting.\");\n      var request = {\n        'type': 'request',\n        'action': 'start',\n        'rounds': 3,\n        'name': this.props.player.username,\n        'index': this.props.player.index\n      };\n      this.props.connection.send(JSON.stringify(request));\n    }\n  }, {\n    key: \"displayPlayers\",\n    value: function displayPlayers() {\n      var data = [];\n      if (this.props.game.numPlayers > 0) data.push(React.createElement(\"div\", {\n        className: \"text\",\n        key: \"ingame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.props.game.numPlayers, \" players in game:\"));else data.push(React.createElement(\"div\", {\n        className: \"text\",\n        key: \"roomempty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Room is empty.\"));\n\n      for (var i = 0; i < this.props.game.numPlayers; i++) {\n        data.push(React.createElement(\"div\", {\n          className: \"text\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.props.game.players[i]));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"username curved\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, data);\n    }\n  }, {\n    key: \"displayStart\",\n    value: function displayStart() {\n      return this.props.player.index === 0 ? React.createElement(Button, {\n        onClick: this.start,\n        disabled: !this.props.inGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Start Game!\") : \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Choose a username and join the game!\"), React.createElement(Form, {\n        inline: true,\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        placeholder: this.props.inGame ? this.props.player.username : \"Username\",\n        onChange: function onChange(e) {\n          return _this2.props.updateGameBasedOnResponse('username', e.target.value);\n        },\n        disabled: this.props.inGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"join\",\n        onClick: this.props.inGame ? this.leave : this.join,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.inGame ? \"Leave\" : \"Join\"), \"\\xA0\", React.createElement(Collapse, {\n        isOpen: this.props.player.index === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"join\",\n        onClick: this.start,\n        disabled: this.props.game.numPlayers < 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Start Game!\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.displayPlayers()));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Game\\Login.js"],"names":["React","Component","CardBody","Collapse","Form","Button","Container","Input","InputGroup","InputGroupAddon","Login","props","state","displayPlayers","bind","join","leave","start","a","obj","i","length","valueOf","console","log","username","target","player","alert","request","connection","send","JSON","stringify","toggleInGame","index","updateGameBasedOnResponse","setCookie","data","game","numPlayers","push","players","inGame","e","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardBody, Collapse, Form } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container, Input, InputGroup, InputGroupAddon } from 'reactstrap'\r\n\r\nimport '../Project.css'\r\n\r\nclass Login extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.displayPlayers = this.displayPlayers.bind(this);\r\n    this.join = this.join.bind(this);\r\n    this.leave = this.leave.bind(this);\r\n    this.start = this.start.bind(this);\r\n  }\r\n\r\n  contains(a, obj) {\r\n    var i = a.length;\r\n    while (i--) {\r\n       if (a[i].valueOf() === obj.valueOf()) {\r\n           return true;\r\n       }\r\n    }\r\n    return false;\r\n  }\r\n  join(){\r\n    console.log(username.target)\r\n    // this.props.updateGameBasedOnResponse('username', e.target.value)\r\n    if(this.props.player.username.length===0) {\r\n      alert(\"Please choose a username.\");\r\n      return;\r\n    }\r\n    console.log(\"Joining game as \"+ this.props.player.username);\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'join',\r\n      'name': this.props.player.username,\r\n    };\r\n    this.props.connection.send(JSON.stringify(request));\r\n    this.props.toggleInGame();\r\n  }\r\n\r\n  leave(){\r\n    console.log(this.props.player.username + \" is leaving the game.\");\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'leave',\r\n      'name': this.props.player.username,\r\n      'index': this.props.player.index\r\n    };\r\n    this.props.updateGameBasedOnResponse('index', -1);\r\n    this.props.connection.send(JSON.stringify(request));\r\n    this.props.setCookie(\"\", \"\", -1);\r\n    this.props.toggleInGame();\r\n  }\r\n\r\n  start(){\r\n    console.log(\"The game is starting.\");\r\n    let request = {\r\n      'type': 'request',\r\n      'action': 'start',\r\n      'rounds': 3,\r\n      'name': this.props.player.username,\r\n      'index': this.props.player.index\r\n    };\r\n    this.props.connection.send(JSON.stringify(request));\r\n  }\r\n\r\n  displayPlayers(){\r\n    let data = [];\r\n    if(this.props.game.numPlayers>0)\r\n      data.push(<div className=\"text\" key=\"ingame\">{this.props.game.numPlayers} players in game:</div>)\r\n    else data.push(<div className=\"text\" key=\"roomempty\">Room is empty.</div>)\r\n    for(let i = 0; i<this.props.game.numPlayers; i++) {\r\n      data.push(<div className=\"text\" key={i}>{this.props.game.players[i] }</div>)\r\n    }\r\n    return(\r\n      <div className=\"username curved\">{data}</div>\r\n    ) \r\n  }\r\n\r\n  displayStart(){\r\n    return(\r\n      this.props.player.index===0 \r\n      ?\r\n        <Button\r\n            onClick={this.start}\r\n            disabled={!this.props.inGame}\r\n          >\r\n            Start Game!\r\n        </Button>\r\n      : \"\"\r\n        );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <CardBody className=\"text\">Choose a username and join the game!</CardBody>\r\n        <Form inline className=\"centered\">\r\n          <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder= {this.props.inGame ? this.props.player.username : \"Username\" }\r\n              onChange={(e) => this.props.updateGameBasedOnResponse('username', e.target.value)}\r\n              disabled={this.props.inGame}\r\n          />\r\n          <br/><br/>\r\n          \r\n          <Button\r\n            className=\"join\"\r\n            onClick={this.props.inGame ? this.leave : this.join}\r\n          >\r\n            {this.props.inGame ? \"Leave\" : \"Join\"}\r\n          </Button>\r\n          &nbsp;\r\n          <Collapse isOpen={this.props.player.index===0}>\r\n          <Button\r\n              className=\"join\"\r\n              onClick={this.start}\r\n              disabled={this.props.game.numPlayers<2}\r\n            >\r\n              Start Game!\r\n          </Button>\r\n        </Collapse>\r\n        </Form>    \r\n        \r\n        <CardBody>\r\n          {this.displayPlayers()}\r\n        </CardBody>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}