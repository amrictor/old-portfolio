{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Game\\\\Choice.js\";\nimport React, { Component } from 'react';\nimport { CardBody, CardTitle } from 'reactstrap';\nimport { Button } from 'reactstrap';\nimport { Container } from 'reactstrap';\nimport loading from '../../resources/loadingicon.gif';\nimport '../Project.css';\n\nvar Choice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Choice, _Component);\n\n  function Choice(props) {\n    var _this;\n\n    _classCallCheck(this, Choice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Choice).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Choice, [{\n    key: \"displayQuotes\",\n    value: function displayQuotes() {\n      var _this2 = this;\n\n      // while(typeof this.props.game.quoteChoices === 'undefined');\n      var data = [];\n\n      var _loop = function _loop(i) {\n        var index = i;\n        data.push(React.createElement(Button, {\n          block: true,\n          className: \"curved\",\n          key: \"quote_\" + i,\n          onClick: function onClick() {\n            console.log(_this2.props.game.quoteChoices[i]);\n\n            _this2.props.choose(_this2.props.game.quoteChoices[index]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, _this2.props.game.quoteChoices[i][0]), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), _this2.props.game.quoteChoices[i][1] + \"... \" + _this2.props.game.quoteChoices[i][2]));\n      };\n\n      for (var i in this.props.game.quoteChoices) {\n        _loop(i);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"screen\",\n    value: function screen() {\n      var waiting = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loading,\n        style: {\n          'display': 'block',\n          'margin': '0 auto'\n        },\n        height: \"45\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(CardTitle, {\n        style: {\n          'textAlign': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Waiting for \", this.props.game.players[this.props.game.indexOfIt], \" to choose a quote.\"));\n      var quotes = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Choose one of the following quotes.\")), this.displayQuotes());\n      return this.props.game.indexOfIt === this.props.player.index ? quotes : waiting;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var waiting = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: loading,\n        style: {\n          'display': 'block',\n          'margin': '0 auto'\n        },\n        height: \"45\",\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text\",\n        style: {\n          'textAlign': 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Waiting for \", this.props.game.players[this.props.game.indexOfIt], \" to choose a quote.\"));\n      var quotes = React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Choose one of the following quotes.\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), this.displayQuotes());\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.props.game.indexOfIt === this.props.player.index ? quotes : waiting);\n    }\n  }]);\n\n  return Choice;\n}(Component);\n\nexport default Choice;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Game\\Choice.js"],"names":["React","Component","CardBody","CardTitle","Button","Container","loading","Choice","props","state","data","i","index","push","console","log","game","quoteChoices","choose","waiting","players","indexOfIt","quotes","displayQuotes","player"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CardBody, CardTitle } from 'reactstrap'\r\nimport { Button } from 'reactstrap'\r\nimport { Container } from 'reactstrap'\r\n\r\nimport loading from '../../resources/loadingicon.gif'\r\nimport '../Project.css'\r\n\r\nclass Choice extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  displayQuotes(){    \r\n    // while(typeof this.props.game.quoteChoices === 'undefined');\r\n    let data = [];\r\n\r\n    for(let i in this.props.game.quoteChoices) {\r\n      let index = i;\r\n      data.push(\r\n              <Button block className=\"curved\"\r\n                key={\"quote_\"+i}\r\n                onClick={() => {\r\n                  console.log(this.props.game.quoteChoices[i])\r\n                  this.props.choose(this.props.game.quoteChoices[index])\r\n                }}\r\n                >\r\n                <i>{this.props.game.quoteChoices[i][0]}</i>\r\n                <br/>\r\n                {this.props.game.quoteChoices[i][1] +\"... \"+ this.props.game.quoteChoices[i][2]}\r\n              </Button>)\r\n    }\r\n    return data;\r\n  }\r\n  screen() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <CardTitle style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</CardTitle>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <div className=\"text\"><i>Choose one of the following quotes.</i></div>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n    return(\r\n      (this.props.game.indexOfIt === this.props.player.index)\r\n      ? quotes\r\n      : waiting\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const waiting = \r\n      <CardBody>\r\n        <img src={loading} style={{'display': 'block', 'margin': '0 auto' }} height=\"45\" alt=\"...\"/>\r\n        <div className=\"text\" style={{'textAlign': 'center'}}>Waiting for {this.props.game.players[this.props.game.indexOfIt]} to choose a quote.</div>\r\n      </CardBody>\r\n\r\n    const quotes =\r\n      <CardBody>\r\n        <div className=\"text\"><i>Choose one of the following quotes.</i></div>\r\n        <br/>\r\n        {this.displayQuotes()}\r\n      </CardBody>\r\n\r\n    return (\r\n      <Container fluid >\r\n        {(this.props.game.indexOfIt === this.props.player.index)\r\n          ? quotes\r\n          : waiting}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default Choice;"]},"metadata":{},"sourceType":"module"}