{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abby\\\\Desktop\\\\portfolio\\\\portfolio\\\\client\\\\src\\\\Components\\\\Trip-Planner\\\\components\\\\Application\\\\Application.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Options from './Options';\nimport Plan from './Plan';\nimport { IconContext } from 'react-icons';\nimport { IoIosCalculator } from 'react-icons/io';\nimport { MdPeople, MdFlightTakeoff } from 'react-icons/md';\nimport { GoGear } from 'react-icons/go';\nimport Calculator from './Calculator';\nimport { get_config } from '../../api/api';\n/* Renders the application.\r\n * Holds the destinations and options state shared with the trip.\r\n */\n\nvar Application =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Application, _Component);\n\n  function Application(props) {\n    var _this;\n\n    _classCallCheck(this, Application);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Application).call(this, props));\n    _this.state = {\n      config: {\n        \"type\": \"config\",\n        \"version\": 4,\n        \"units\": [\"kilometers\", \"miles\", \"nautical miles\", \"user defined\"],\n        \"optimization\": [{\n          \"label\": \"none\",\n          \"description\": \"The trip is not optimized.\"\n        }, {\n          \"label\": \"short\",\n          \"description\": \"Nearest neighbor.\"\n        }, {\n          \"label\": \"shorter\",\n          \"description\": \"2-opt.\"\n        }, {\n          \"label\": \"shortest\",\n          \"description\": \"3-opt.\"\n        }],\n        \"attributes\": [\"name\", \"id\", \"latitude\", \"longitude\"],\n        \"filters\": [{\n          \"name\": \"type\",\n          \"values\": [\"balloonport\", \"heliport\", \"airport\", \"seaplane base\"]\n        }, {\n          \"name\": \"country\",\n          \"values\": [\"Costa Rica\", \"Japan\", \"Kenya\", \"New Zealand\", \"Spain\", \"United States\"]\n        }, {\n          \"name\": \"continents\",\n          \"values\": [\"Africa\", \"Antarctica\", \"Asia\", \"Europe\", \"Oceania\", \"North America\", \"South America\"]\n        }],\n        \"maps\": [\"svg\", \"kml\"]\n      },\n      distance: {\n        type: \"distance\",\n        version: 4,\n        origin: {\n          latitude: 0,\n          longitude: 0\n        },\n        destination: {\n          latitude: 0,\n          longitude: 0\n        },\n        units: \"miles\",\n        distance: 0\n      },\n      trip: {\n        type: \"trip\",\n        version: 4,\n        title: \"My Trip\",\n        options: {\n          units: \"miles\",\n          unitName: \"\",\n          unitRadius: 0,\n          optimization: \"none\",\n          map: \"kml\"\n        },\n        places: [{\n          \"id\": \"Kab\",\n          \"name\": \"Kabul\",\n          \"latitude\": 34.28,\n          \"longitude\": 69.11\n        }, {\n          \"id\": \"Tir\",\n          \"name\": \"Tirane\",\n          \"latitude\": 41.18,\n          \"longitude\": 19.49\n        }, {\n          \"id\": \"Alg\",\n          \"name\": \"Algiers\",\n          \"latitude\": 36.42,\n          \"longitude\": 3.08\n        }, {\n          \"id\": \"Pag\",\n          \"name\": \"Pago_Pago\",\n          \"latitude\": -14.16,\n          \"longitude\": -170.43\n        }, {\n          \"id\": \"And\",\n          \"name\": \"Andorra_la_Vella\",\n          \"latitude\": 42.31,\n          \"longitude\": 1.32\n        }, {\n          \"id\": \"Lua\",\n          \"name\": \"Luanda\",\n          \"latitude\": -8.50,\n          \"longitude\": 13.15\n        }, {\n          \"id\": \"Wes\",\n          \"name\": \"West_Indies\",\n          \"latitude\": 17.20,\n          \"longitude\": -61.48\n        }, {\n          \"id\": \"Bue\",\n          \"name\": \"Buenos_Aires\",\n          \"latitude\": -36.30,\n          \"longitude\": -60.00\n        }, {\n          \"id\": \"Yer\",\n          \"name\": \"Yerevan\",\n          \"latitude\": 40.10,\n          \"longitude\": 44.31\n        }, {\n          \"id\": \"Ora\",\n          \"name\": \"Oranjestad\",\n          \"latitude\": 12.32,\n          \"longitude\": -70.02\n        }, {\n          \"id\": \"Can\",\n          \"name\": \"Canberra\",\n          \"latitude\": -35.15,\n          \"longitude\": 149.08\n        }, {\n          \"id\": \"Vie\",\n          \"name\": \"Vienna\",\n          \"latitude\": 48.12,\n          \"longitude\": 16.22\n        }, {\n          \"id\": \"Bak\",\n          \"name\": \"Baku\",\n          \"latitude\": 40.29,\n          \"longitude\": 49.56\n        }, {\n          \"id\": \"Nas\",\n          \"name\": \"Nassau\",\n          \"latitude\": 25.05,\n          \"longitude\": -77.20\n        }, {\n          \"id\": \"Man\",\n          \"name\": \"Manama\",\n          \"latitude\": 26.10,\n          \"longitude\": 50.30\n        }, {\n          \"id\": \"Dha\",\n          \"name\": \"Dhaka\",\n          \"latitude\": 23.43,\n          \"longitude\": 90.26\n        }, {\n          \"id\": \"Bri\",\n          \"name\": \"Bridgetown\",\n          \"latitude\": 13.05,\n          \"longitude\": -59.30\n        }, {\n          \"id\": \"Min\",\n          \"name\": \"Minsk\",\n          \"latitude\": 53.52,\n          \"longitude\": 27.30\n        }, {\n          \"id\": \"Bru\",\n          \"name\": \"Brussels\",\n          \"latitude\": 50.51,\n          \"longitude\": 4.21\n        }, {\n          \"id\": \"Bel\",\n          \"name\": \"Belmopan\",\n          \"latitude\": 17.18,\n          \"longitude\": -88.30\n        }, {\n          \"id\": \"Por\",\n          \"name\": \"Porto_Novo\",\n          \"latitude\": 6.23,\n          \"longitude\": 2.42\n        }, {\n          \"id\": \"Thi\",\n          \"name\": \"Thimphu\",\n          \"latitude\": 27.31,\n          \"longitude\": 89.45\n        }, {\n          \"id\": \"La_\",\n          \"name\": \"La_Paz\",\n          \"latitude\": -16.20,\n          \"longitude\": -68.10\n        }, {\n          \"id\": \"Sar\",\n          \"name\": \"Sarajevo\",\n          \"latitude\": 43.52,\n          \"longitude\": 18.26\n        }, {\n          \"id\": \"Gab\",\n          \"name\": \"Gaborone\",\n          \"latitude\": -24.45,\n          \"longitude\": 25.57\n        }, {\n          \"id\": \"Bra\",\n          \"name\": \"Brasilia\",\n          \"latitude\": -15.47,\n          \"longitude\": -47.55\n        }, {\n          \"id\": \"Roa\",\n          \"name\": \"Road_Town\",\n          \"latitude\": 18.27,\n          \"longitude\": -64.37\n        }, {\n          \"id\": \"Sof\",\n          \"name\": \"Sofia\",\n          \"latitude\": 42.45,\n          \"longitude\": 23.20\n        }, {\n          \"id\": \"Oua\",\n          \"name\": \"Ouagadougou\",\n          \"latitude\": 12.15,\n          \"longitude\": -1.30\n        }, {\n          \"id\": \"Buj\",\n          \"name\": \"Bujumbura\",\n          \"latitude\": -3.16,\n          \"longitude\": 29.18\n        }, {\n          \"id\": \"Phn\",\n          \"name\": \"Phnom_Penh\",\n          \"latitude\": 11.33,\n          \"longitude\": 104.55\n        }, {\n          \"id\": \"Yao\",\n          \"name\": \"Yaounde\",\n          \"latitude\": 3.50,\n          \"longitude\": 11.35\n        }, {\n          \"id\": \"Ott\",\n          \"name\": \"Ottawa\",\n          \"latitude\": 45.27,\n          \"longitude\": -75.42\n        }, {\n          \"id\": \"Pra\",\n          \"name\": \"Praia\",\n          \"latitude\": 15.02,\n          \"longitude\": -23.34\n        }, {\n          \"id\": \"Geo\",\n          \"name\": \"George_Town\",\n          \"latitude\": 19.20,\n          \"longitude\": -81.24\n        }, {\n          \"id\": \"Ban\",\n          \"name\": \"Bangui\",\n          \"latitude\": 4.23,\n          \"longitude\": 18.35\n        }, {\n          \"id\": \"N'D\",\n          \"name\": \"N'Djamena\",\n          \"latitude\": 12.10,\n          \"longitude\": 14.59\n        }, {\n          \"id\": \"San\",\n          \"name\": \"Santiago\",\n          \"latitude\": -33.24,\n          \"longitude\": -70.40\n        }, {\n          \"id\": \"Bei\",\n          \"name\": \"Beijing\",\n          \"latitude\": 39.55,\n          \"longitude\": 116.20\n        }, {\n          \"id\": \"Bog\",\n          \"name\": \"Bogota\",\n          \"latitude\": 4.34,\n          \"longitude\": -74.00\n        }, {\n          \"id\": \"Mor\",\n          \"name\": \"Moroni\",\n          \"latitude\": -11.40,\n          \"longitude\": 43.16\n        }, {\n          \"id\": \"Bra\",\n          \"name\": \"Brazzaville\",\n          \"latitude\": -4.09,\n          \"longitude\": 15.12\n        }, {\n          \"id\": \"San\",\n          \"name\": \"San_Jose\",\n          \"latitude\": 9.55,\n          \"longitude\": -84.02\n        }, {\n          \"id\": \"Yam\",\n          \"name\": \"Yamoussoukro\",\n          \"latitude\": 6.49,\n          \"longitude\": -5.17\n        }, {\n          \"id\": \"Zag\",\n          \"name\": \"Zagreb\",\n          \"latitude\": 45.50,\n          \"longitude\": 15.58\n        }, {\n          \"id\": \"Hav\",\n          \"name\": \"Havana\",\n          \"latitude\": 23.08,\n          \"longitude\": -82.22\n        }, {\n          \"id\": \"Nic\",\n          \"name\": \"Nicosia\",\n          \"latitude\": 35.10,\n          \"longitude\": 33.25\n        }, {\n          \"id\": \"Pra\",\n          \"name\": \"Prague\",\n          \"latitude\": 50.05,\n          \"longitude\": 14.22\n        }, {\n          \"id\": \"Kin\",\n          \"name\": \"Kinshasa\",\n          \"latitude\": -4.20,\n          \"longitude\": 15.15\n        }, {\n          \"id\": \"Cop\",\n          \"name\": \"Copenhagen\",\n          \"latitude\": 55.41,\n          \"longitude\": 12.34\n        }, {\n          \"id\": \"Dji\",\n          \"name\": \"Djibouti\",\n          \"latitude\": 11.08,\n          \"longitude\": 42.20\n        }, {\n          \"id\": \"Ros\",\n          \"name\": \"Roseau\",\n          \"latitude\": 15.20,\n          \"longitude\": -61.24\n        }, {\n          \"id\": \"San\",\n          \"name\": \"Santo_Domingo\",\n          \"latitude\": 18.30,\n          \"longitude\": -69.59\n        }, {\n          \"id\": \"Dil\",\n          \"name\": \"Dili\",\n          \"latitude\": -8.29,\n          \"longitude\": 125.34\n        }, {\n          \"id\": \"Qui\",\n          \"name\": \"Quito\",\n          \"latitude\": -0.15,\n          \"longitude\": -78.35\n        }, {\n          \"id\": \"Cai\",\n          \"name\": \"Cairo\",\n          \"latitude\": 30.01,\n          \"longitude\": 31.14\n        }, {\n          \"id\": \"Mal\",\n          \"name\": \"Malabo\",\n          \"latitude\": 3.45,\n          \"longitude\": 8.50\n        }, {\n          \"id\": \"Asm\",\n          \"name\": \"Asmara\",\n          \"latitude\": 15.19,\n          \"longitude\": 38.55\n        }, {\n          \"id\": \"Tal\",\n          \"name\": \"Tallinn\",\n          \"latitude\": 59.22,\n          \"longitude\": 24.48\n        }, {\n          \"id\": \"Add\",\n          \"name\": \"Addis_Ababa\",\n          \"latitude\": 9.02,\n          \"longitude\": 38.42\n        }, {\n          \"id\": \"Sta\",\n          \"name\": \"Stanley\",\n          \"latitude\": -51.40,\n          \"longitude\": -59.51\n        }, {\n          \"id\": \"Tor\",\n          \"name\": \"Torshavn\",\n          \"latitude\": 62.05,\n          \"longitude\": -6.56\n        }, {\n          \"id\": \"Suv\",\n          \"name\": \"Suva\",\n          \"latitude\": -18.06,\n          \"longitude\": 178.30\n        }, {\n          \"id\": \"Hel\",\n          \"name\": \"Helsinki\",\n          \"latitude\": 60.15,\n          \"longitude\": 25.03\n        }, {\n          \"id\": \"Par\",\n          \"name\": \"Paris\",\n          \"latitude\": 48.50,\n          \"longitude\": 2.20\n        }, {\n          \"id\": \"Cay\",\n          \"name\": \"Cayenne\",\n          \"latitude\": 5.05,\n          \"longitude\": -52.18\n        }, {\n          \"id\": \"Pap\",\n          \"name\": \"Papeete\",\n          \"latitude\": -17.32,\n          \"longitude\": -149.34\n        }, {\n          \"id\": \"Lib\",\n          \"name\": \"Libreville\",\n          \"latitude\": 0.25,\n          \"longitude\": 9.26\n        }, {\n          \"id\": \"Ban\",\n          \"name\": \"Banjul\",\n          \"latitude\": 13.28,\n          \"longitude\": -16.40\n        }, {\n          \"id\": \"T'b\",\n          \"name\": \"T'bilisi\",\n          \"latitude\": 41.43,\n          \"longitude\": 44.50\n        }, {\n          \"id\": \"Ber\",\n          \"name\": \"Berlin\",\n          \"latitude\": 52.30,\n          \"longitude\": 13.25\n        }, {\n          \"id\": \"Acc\",\n          \"name\": \"Accra\",\n          \"latitude\": 5.35,\n          \"longitude\": -0.06\n        }, {\n          \"id\": \"Ath\",\n          \"name\": \"Athens\",\n          \"latitude\": 37.58,\n          \"longitude\": 23.46\n        }, {\n          \"id\": \"Nuu\",\n          \"name\": \"Nuuk\",\n          \"latitude\": 64.10,\n          \"longitude\": -51.35\n        }, {\n          \"id\": \"Bas\",\n          \"name\": \"Basse-Terre\",\n          \"latitude\": 16.00,\n          \"longitude\": -61.44\n        }, {\n          \"id\": \"Gua\",\n          \"name\": \"Guatemala\",\n          \"latitude\": 14.40,\n          \"longitude\": -90.22\n        }, {\n          \"id\": \"St.\",\n          \"name\": \"St._Peter_Port\",\n          \"latitude\": 49.26,\n          \"longitude\": -2.33\n        }, {\n          \"id\": \"Con\",\n          \"name\": \"Conakry\",\n          \"latitude\": 9.29,\n          \"longitude\": -13.49\n        }, {\n          \"id\": \"Bis\",\n          \"name\": \"Bissau\",\n          \"latitude\": 11.45,\n          \"longitude\": -15.45\n        }, {\n          \"id\": \"Geo\",\n          \"name\": \"Georgetown\",\n          \"latitude\": 6.50,\n          \"longitude\": -58.12\n        }, {\n          \"id\": \"Por\",\n          \"name\": \"Port-au-Prince\",\n          \"latitude\": 18.40,\n          \"longitude\": -72.20\n        }, {\n          \"id\": \"Teg\",\n          \"name\": \"Tegucigalpa\",\n          \"latitude\": 14.05,\n          \"longitude\": -87.14\n        }, {\n          \"id\": \"Bud\",\n          \"name\": \"Budapest\",\n          \"latitude\": 47.29,\n          \"longitude\": 19.05\n        }, {\n          \"id\": \"Rey\",\n          \"name\": \"Reykjavik\",\n          \"latitude\": 64.10,\n          \"longitude\": -21.57\n        }, {\n          \"id\": \"New\",\n          \"name\": \"New_Delhi\",\n          \"latitude\": 28.37,\n          \"longitude\": 77.13\n        }, {\n          \"id\": \"Jak\",\n          \"name\": \"Jakarta\",\n          \"latitude\": -6.09,\n          \"longitude\": 106.49\n        }, {\n          \"id\": \"Teh\",\n          \"name\": \"Tehran\",\n          \"latitude\": 35.44,\n          \"longitude\": 51.30\n        }, {\n          \"id\": \"Bag\",\n          \"name\": \"Baghdad\",\n          \"latitude\": 33.20,\n          \"longitude\": 44.30\n        }, {\n          \"id\": \"Dub\",\n          \"name\": \"Dublin\",\n          \"latitude\": 53.21,\n          \"longitude\": -6.15\n        }, {\n          \"id\": \"Jer\",\n          \"name\": \"Jerusalem\",\n          \"latitude\": 31.71,\n          \"longitude\": -35.10\n        }, {\n          \"id\": \"Rom\",\n          \"name\": \"Rome\",\n          \"latitude\": 41.54,\n          \"longitude\": 12.29\n        }, {\n          \"id\": \"Kin\",\n          \"name\": \"Kingston\",\n          \"latitude\": 44.23,\n          \"longitude\": -76.50\n        }, {\n          \"id\": \"Amm\",\n          \"name\": \"Amman\",\n          \"latitude\": 31.57,\n          \"longitude\": 35.52\n        }, {\n          \"id\": \"Ast\",\n          \"name\": \"Astana\",\n          \"latitude\": 51.10,\n          \"longitude\": 71.30\n        }, {\n          \"id\": \"Nai\",\n          \"name\": \"Nairobi\",\n          \"latitude\": -1.17,\n          \"longitude\": 36.48\n        }, {\n          \"id\": \"Tar\",\n          \"name\": \"Tarawa\",\n          \"latitude\": 1.30,\n          \"longitude\": 173.00\n        }, {\n          \"id\": \"Kuw\",\n          \"name\": \"Kuwait\",\n          \"latitude\": 29.30,\n          \"longitude\": 48.00\n        }, {\n          \"id\": \"Bis\",\n          \"name\": \"Bishkek\",\n          \"latitude\": 42.54,\n          \"longitude\": 74.46\n        }, {\n          \"id\": \"Vie\",\n          \"name\": \"Vientiane\",\n          \"latitude\": 17.58,\n          \"longitude\": 102.36\n        }, {\n          \"id\": \"Rig\",\n          \"name\": \"Riga\",\n          \"latitude\": 56.53,\n          \"longitude\": 24.08\n        }, {\n          \"id\": \"Bei\",\n          \"name\": \"Beirut\",\n          \"latitude\": 33.53,\n          \"longitude\": 35.31\n        }, {\n          \"id\": \"Mas\",\n          \"name\": \"Maseru\",\n          \"latitude\": -29.18,\n          \"longitude\": 27.30\n        }, {\n          \"id\": \"Mon\",\n          \"name\": \"Monrovia\",\n          \"latitude\": 6.18,\n          \"longitude\": -10.47\n        }, {\n          \"id\": \"Vad\",\n          \"name\": \"Vaduz\",\n          \"latitude\": 47.08,\n          \"longitude\": 9.31\n        }, {\n          \"id\": \"Vil\",\n          \"name\": \"Vilnius\",\n          \"latitude\": 54.38,\n          \"longitude\": 25.19\n        }, {\n          \"id\": \"Lux\",\n          \"name\": \"Luxembourg\",\n          \"latitude\": 49.37,\n          \"longitude\": 6.09\n        }, {\n          \"id\": \"Ant\",\n          \"name\": \"Antananarivo\",\n          \"latitude\": -18.55,\n          \"longitude\": 47.31\n        }, {\n          \"id\": \"Lil\",\n          \"name\": \"Lilongwe\",\n          \"latitude\": -14.00,\n          \"longitude\": 33.48\n        }, {\n          \"id\": \"Kua\",\n          \"name\": \"Kuala_Lumpur\",\n          \"latitude\": 3.09,\n          \"longitude\": 101.41\n        }, {\n          \"id\": \"Mal\",\n          \"name\": \"Male\",\n          \"latitude\": 4.00,\n          \"longitude\": 73.28\n        }, {\n          \"id\": \"Bam\",\n          \"name\": \"Bamako\",\n          \"latitude\": 12.34,\n          \"longitude\": -7.55\n        }, {\n          \"id\": \"Val\",\n          \"name\": \"Valletta\",\n          \"latitude\": 35.54,\n          \"longitude\": 14.31\n        }, {\n          \"id\": \"For\",\n          \"name\": \"Fort-de-France\",\n          \"latitude\": 14.36,\n          \"longitude\": -61.02\n        }, {\n          \"id\": \"Nou\",\n          \"name\": \"Nouakchott\",\n          \"latitude\": -20.10,\n          \"longitude\": 57.30\n        }, {\n          \"id\": \"Mam\",\n          \"name\": \"Mamoudzou\",\n          \"latitude\": -12.48,\n          \"longitude\": 45.14\n        }, {\n          \"id\": \"Mex\",\n          \"name\": \"Mexico\",\n          \"latitude\": 19.20,\n          \"longitude\": -99.10\n        }, {\n          \"id\": \"Pal\",\n          \"name\": \"Palikir\",\n          \"latitude\": 6.55,\n          \"longitude\": 158.09\n        }, {\n          \"id\": \"Map\",\n          \"name\": \"Maputo\",\n          \"latitude\": -25.58,\n          \"longitude\": 32.32\n        }, {\n          \"id\": \"Yan\",\n          \"name\": \"Yangon\",\n          \"latitude\": 16.45,\n          \"longitude\": 96.20\n        }, {\n          \"id\": \"Win\",\n          \"name\": \"Windhoek\",\n          \"latitude\": -22.35,\n          \"longitude\": 17.04\n        }, {\n          \"id\": \"Kat\",\n          \"name\": \"Kathmandu\",\n          \"latitude\": 27.45,\n          \"longitude\": 85.20\n        }, {\n          \"id\": \"Ams\",\n          \"name\": \"Amsterdam\",\n          \"latitude\": 52.23,\n          \"longitude\": 4.54\n        }, {\n          \"id\": \"Nou\",\n          \"name\": \"Noumea\",\n          \"latitude\": -22.17,\n          \"longitude\": 166.30\n        }, {\n          \"id\": \"Wel\",\n          \"name\": \"Wellington\",\n          \"latitude\": -41.19,\n          \"longitude\": 174.46\n        }, {\n          \"id\": \"Man\",\n          \"name\": \"Managua\",\n          \"latitude\": 12.06,\n          \"longitude\": -86.20\n        }, {\n          \"id\": \"Nia\",\n          \"name\": \"Niamey\",\n          \"latitude\": 13.27,\n          \"longitude\": 2.06\n        }, {\n          \"id\": \"Abu\",\n          \"name\": \"Abuja\",\n          \"latitude\": 9.05,\n          \"longitude\": 7.32\n        }, {\n          \"id\": \"Pyo\",\n          \"name\": \"Pyongyang\",\n          \"latitude\": 39.09,\n          \"longitude\": 125.30\n        }, {\n          \"id\": \"Sai\",\n          \"name\": \"Saipan\",\n          \"latitude\": 15.12,\n          \"longitude\": 145.45\n        }, {\n          \"id\": \"Osl\",\n          \"name\": \"Oslo\",\n          \"latitude\": 59.55,\n          \"longitude\": 10.45\n        }, {\n          \"id\": \"Mas\",\n          \"name\": \"Masqat\",\n          \"latitude\": 23.37,\n          \"longitude\": 58.36\n        }, {\n          \"id\": \"Isl\",\n          \"name\": \"Islamabad\",\n          \"latitude\": 33.40,\n          \"longitude\": 73.10\n        }, {\n          \"id\": \"Kor\",\n          \"name\": \"Koror\",\n          \"latitude\": 7.20,\n          \"longitude\": 134.28\n        }, {\n          \"id\": \"Pan\",\n          \"name\": \"Panama\",\n          \"latitude\": 9.00,\n          \"longitude\": -79.25\n        }, {\n          \"id\": \"Asu\",\n          \"name\": \"Asuncion\",\n          \"latitude\": -25.10,\n          \"longitude\": -57.30\n        }, {\n          \"id\": \"Lim\",\n          \"name\": \"Lima\",\n          \"latitude\": -12.00,\n          \"longitude\": -77.00\n        }, {\n          \"id\": \"Man\",\n          \"name\": \"Manila\",\n          \"latitude\": 14.40,\n          \"longitude\": 121.03\n        }, {\n          \"id\": \"War\",\n          \"name\": \"Warsaw\",\n          \"latitude\": 52.13,\n          \"longitude\": 21.00\n        }, {\n          \"id\": \"Lis\",\n          \"name\": \"Lisbon\",\n          \"latitude\": 38.42,\n          \"longitude\": -9.10\n        }, {\n          \"id\": \"San\",\n          \"name\": \"San_Juan\",\n          \"latitude\": 18.28,\n          \"longitude\": -66.07\n        }, {\n          \"id\": \"Doh\",\n          \"name\": \"Doha\",\n          \"latitude\": 25.15,\n          \"longitude\": 51.35\n        }, {\n          \"id\": \"Seo\",\n          \"name\": \"Seoul\",\n          \"latitude\": 37.31,\n          \"longitude\": 126.58\n        }, {\n          \"id\": \"Buc\",\n          \"name\": \"Bucuresti\",\n          \"latitude\": 44.27,\n          \"longitude\": 26.10\n        }, {\n          \"id\": \"Mos\",\n          \"name\": \"Moskva\",\n          \"latitude\": 55.45,\n          \"longitude\": 37.35\n        }, {\n          \"id\": \"Kig\",\n          \"name\": \"Kigali\",\n          \"latitude\": -1.59,\n          \"longitude\": 30.04\n        }, {\n          \"id\": \"Bas\",\n          \"name\": \"Basseterre\",\n          \"latitude\": 17.17,\n          \"longitude\": -62.43\n        }, {\n          \"id\": \"Cas\",\n          \"name\": \"Castries\",\n          \"latitude\": 14.02,\n          \"longitude\": -60.58\n        }, {\n          \"id\": \"Sai\",\n          \"name\": \"Saint-Pierre\",\n          \"latitude\": 46.46,\n          \"longitude\": -56.12\n        }, {\n          \"id\": \"Api\",\n          \"name\": \"Apia\",\n          \"latitude\": -13.50,\n          \"longitude\": -171.50\n        }, {\n          \"id\": \"San\",\n          \"name\": \"San_Marino\",\n          \"latitude\": 43.55,\n          \"longitude\": 12.30\n        }, {\n          \"id\": \"Sao\",\n          \"name\": \"Sao_Tome\",\n          \"latitude\": 0.10,\n          \"longitude\": 6.39\n        }, {\n          \"id\": \"Riy\",\n          \"name\": \"Riyadh\",\n          \"latitude\": 24.41,\n          \"longitude\": 46.42\n        }, {\n          \"id\": \"Dak\",\n          \"name\": \"Dakar\",\n          \"latitude\": 14.34,\n          \"longitude\": -17.29\n        }, {\n          \"id\": \"Fre\",\n          \"name\": \"Freetown\",\n          \"latitude\": 8.30,\n          \"longitude\": -13.17\n        }, {\n          \"id\": \"Bra\",\n          \"name\": \"Bratislava\",\n          \"latitude\": 48.10,\n          \"longitude\": 17.07\n        }, {\n          \"id\": \"Lju\",\n          \"name\": \"Ljubljana\",\n          \"latitude\": 46.04,\n          \"longitude\": 14.33\n        }, {\n          \"id\": \"Hon\",\n          \"name\": \"Honiara\",\n          \"latitude\": -9.27,\n          \"longitude\": 159.57\n        }, {\n          \"id\": \"Mog\",\n          \"name\": \"Mogadishu\",\n          \"latitude\": 2.02,\n          \"longitude\": 45.25\n        }, {\n          \"id\": \"Pre\",\n          \"name\": \"Pretoria\",\n          \"latitude\": -25.44,\n          \"longitude\": 28.12\n        }, {\n          \"id\": \"Mad\",\n          \"name\": \"Madrid\",\n          \"latitude\": 40.25,\n          \"longitude\": -3.45\n        }, {\n          \"id\": \"Kha\",\n          \"name\": \"Khartoum\",\n          \"latitude\": 15.31,\n          \"longitude\": 32.35\n        }, {\n          \"id\": \"Par\",\n          \"name\": \"Paramaribo\",\n          \"latitude\": 5.50,\n          \"longitude\": -55.10\n        }, {\n          \"id\": \"Mba\",\n          \"name\": \"Mbabane\",\n          \"latitude\": -26.18,\n          \"longitude\": 31.06\n        }, {\n          \"id\": \"Sto\",\n          \"name\": \"Stockholm\",\n          \"latitude\": 59.20,\n          \"longitude\": 18.03\n        }, {\n          \"id\": \"Ber\",\n          \"name\": \"Bern\",\n          \"latitude\": 46.57,\n          \"longitude\": 7.28\n        }, {\n          \"id\": \"Dam\",\n          \"name\": \"Damascus\",\n          \"latitude\": 33.30,\n          \"longitude\": 36.18\n        }, {\n          \"id\": \"Dus\",\n          \"name\": \"Dushanbe\",\n          \"latitude\": 38.33,\n          \"longitude\": 68.48\n        }, {\n          \"id\": \"Ban\",\n          \"name\": \"Bangkok\",\n          \"latitude\": 13.45,\n          \"longitude\": 100.35\n        }, {\n          \"id\": \"Lom\",\n          \"name\": \"Lome\",\n          \"latitude\": 6.09,\n          \"longitude\": 1.20\n        }, {\n          \"id\": \"Nuk\",\n          \"name\": \"Nuku'alofa\",\n          \"latitude\": -21.10,\n          \"longitude\": -174.00\n        }, {\n          \"id\": \"Tun\",\n          \"name\": \"Tunis\",\n          \"latitude\": 36.50,\n          \"longitude\": 10.11\n        }, {\n          \"id\": \"Ank\",\n          \"name\": \"Ankara\",\n          \"latitude\": 39.57,\n          \"longitude\": 32.54\n        }, {\n          \"id\": \"Ash\",\n          \"name\": \"Ashgabat\",\n          \"latitude\": 38.00,\n          \"longitude\": 57.50\n        }, {\n          \"id\": \"Fun\",\n          \"name\": \"Funafuti\",\n          \"latitude\": -8.31,\n          \"longitude\": 179.13\n        }, {\n          \"id\": \"Kam\",\n          \"name\": \"Kampala\",\n          \"latitude\": 0.20,\n          \"longitude\": 32.30\n        }, {\n          \"id\": \"Kie\",\n          \"name\": \"Kiev\",\n          \"latitude\": 50.30,\n          \"longitude\": 30.28\n        }, {\n          \"id\": \"Abu\",\n          \"name\": \"Abu_Dhabi\",\n          \"latitude\": 24.28,\n          \"longitude\": 54.22\n        }, {\n          \"id\": \"Lon\",\n          \"name\": \"London\",\n          \"latitude\": 51.36,\n          \"longitude\": -0.05\n        }, {\n          \"id\": \"Dod\",\n          \"name\": \"Dodoma\",\n          \"latitude\": -6.08,\n          \"longitude\": 35.45\n        }, {\n          \"id\": \"Was\",\n          \"name\": \"Washington_DC\",\n          \"latitude\": 39.91,\n          \"longitude\": -77.02\n        }, {\n          \"id\": \"Cha\",\n          \"name\": \"Charlotte_Amalie\",\n          \"latitude\": 18.21,\n          \"longitude\": -64.56\n        }, {\n          \"id\": \"Mon\",\n          \"name\": \"Montevideo\",\n          \"latitude\": -34.50,\n          \"longitude\": -56.11\n        }, {\n          \"id\": \"Tas\",\n          \"name\": \"Tashkent\",\n          \"latitude\": 41.20,\n          \"longitude\": 69.10\n        }, {\n          \"id\": \"Por\",\n          \"name\": \"Port-Vila\",\n          \"latitude\": -17.45,\n          \"longitude\": 168.18\n        }, {\n          \"id\": \"Car\",\n          \"name\": \"Caracas\",\n          \"latitude\": 10.30,\n          \"longitude\": -66.55\n        }, {\n          \"id\": \"Han\",\n          \"name\": \"Hanoi\",\n          \"latitude\": 21.05,\n          \"longitude\": 105.55\n        }, {\n          \"id\": \"Bel\",\n          \"name\": \"Belgrade\",\n          \"latitude\": 44.50,\n          \"longitude\": 20.37\n        }, {\n          \"id\": \"Lus\",\n          \"name\": \"Lusaka\",\n          \"latitude\": -15.28,\n          \"longitude\": 28.16\n        }, {\n          \"id\": \"Har\",\n          \"name\": \"Harare\",\n          \"latitude\": -17.43,\n          \"longitude\": 31.02\n        }],\n        map: null\n      },\n      port: window.location.port,\n      host: window.location.host,\n      activeTab: '1',\n      realTime: false\n    };\n    _this.updateTrip = _this.updateTrip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBasedOnResponse = _this.updateBasedOnResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateOptions = _this.updateOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateHostAndPort = _this.updateHostAndPort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaces = _this.updatePlaces.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateOriginAndDestination = _this.updateOriginAndDestination.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateDistanceBasedOnResponse = _this.updateDistanceBasedOnResponse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleTab = _this.toggleTab.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateRealTime = _this.updateRealTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Application, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// get_config().then(\n      //     config => {\n      //         this.setState({\n      //             config: config\n      //         })\n      //     }\n      // );\n    }\n  }, {\n    key: \"updateHostAndPort\",\n    value: function updateHostAndPort(host, port) {\n      port = port ? port : 0;\n      this.setState({\n        port: parseInt(port, 10)\n      });\n      host = host ? host : \"black-bottle.cs.colostate.edu\";\n      this.setState({\n        host: host\n      }); // get_config(this.port, this.host).then(\n      //     config => {\n      //         this.setState({\n      //             config: config\n      //         })\n      //     }\n      // );\n    }\n  }, {\n    key: \"updateDistanceBasedOnResponse\",\n    value: function updateDistanceBasedOnResponse(value) {\n      this.setState({\n        distance: value\n      });\n    }\n  }, {\n    key: \"updateOriginAndDestination\",\n    value: function updateOriginAndDestination(lat_f, long_f, lat_t, long_t) {\n      var distance = this.state.distance;\n      distance.origin = {\n        latitude: lat_f,\n        longtitude: long_f\n      };\n      distance.destination = {\n        latitude: lat_t,\n        longtitude: long_t\n      };\n      this.setState(distance);\n    }\n  }, {\n    key: \"updateTrip\",\n    value: function updateTrip(field, value) {\n      var trip = this.state.trip;\n      trip[field] = value;\n      this.setState(trip);\n    }\n  }, {\n    key: \"updateBasedOnResponse\",\n    value: function updateBasedOnResponse(value) {\n      this.setState({\n        trip: value\n      });\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(option, value) {\n      var trip = this.state.trip;\n      trip.options[option] = value;\n      this.setState(trip);\n    } //key can only be {\"add\", \"remove\", \"reverse\", \"origin\"}, and perform accordingly\n\n  }, {\n    key: \"updatePlaces\",\n    value: function updatePlaces(value, key) {\n      if (key === \"add\") {\n        this.addPlace(value);\n      } else if (key === \"remove\") {\n        this.removePlace(value);\n      } else if (key === \"reverse\") {\n        this.reversePlaces();\n      } else if (key === \"origin\") {\n        this.setFirstPlace(value);\n      }\n    }\n  }, {\n    key: \"updateRealTime\",\n    value: function updateRealTime(value) {\n      value = value === 'true';\n      this.setState({\n        realTime: value\n      });\n    }\n  }, {\n    key: \"toggleTab\",\n    value: function toggleTab(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"addPlace\",\n    value: function addPlace(value) {\n      if (this.state.trip.places.length === 0) {\n        this.state.trip.places = [value];\n      } else {\n        var place = JSON.stringify(value);\n        var found = this.state.trip.places.findIndex(function (ele) {\n          return JSON.stringify(ele) === place;\n        });\n\n        if (found === -1) {\n          this.state.trip.places.push(value);\n        }\n      }\n    }\n  }, {\n    key: \"removePlace\",\n    value: function removePlace(value) {\n      var place = JSON.stringify(value);\n      var trip = this.state.trip;\n\n      if (this.state.trip.places.length !== 0) {\n        trip[\"places\"] = trip[\"places\"].filter(function (ele) {\n          return JSON.stringify(ele) !== place;\n        });\n      }\n\n      this.setState(trip);\n    }\n  }, {\n    key: \"reversePlaces\",\n    value: function reversePlaces() {\n      var trip = this.state.trip;\n      trip.places.reverse();\n      trip.distances.reverse();\n      this.setState(trip);\n    }\n  }, {\n    key: \"setFirstPlace\",\n    value: function setFirstPlace(index) {\n      var places = [];\n      var distances = [];\n\n      for (var i = 0; i < this.state.trip.places.length; i++) {\n        places.push(this.state.trip.places[index]);\n        distances.push(this.state.trip.distances[index]);\n        index = (index + 1) % this.state.trip.places.length;\n      }\n\n      var trip = this.state.trip;\n      trip.places = places;\n      trip.distances = distances;\n      this.setState(trip);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.config) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        });\n      }\n\n      var style = {\n        textDecoration: 'none'\n      };\n      var aStyle = {\n        color: '#255f35',\n        textDecoration: 'none'\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(IconContext.Provider, {\n        value: {\n          size: '2.4em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          'position': 'absolute',\n          'bottom': '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Trip Planner Demo (T23, CS314)\"))), React.createElement(Col, {\n        md: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: 'float-right',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1'\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab('1');\n        },\n        style: this.state.activeTab === '1' ? aStyle : style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(MdFlightTakeoff, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2'\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab('2');\n        },\n        style: this.state.activeTab === '2' ? aStyle : style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(IoIosCalculator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3'\n        }),\n        onClick: function onClick() {\n          _this2.toggleTab('3');\n        },\n        style: this.state.activeTab === '3' ? aStyle : style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(GoGear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      })))))))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(Plan, {\n        updateBasedOnResponse: this.updateBasedOnResponse,\n        updatePlaces: this.updatePlaces,\n        updateTrip: this.updateTrip,\n        config: this.state.config,\n        trip: this.state.trip,\n        places: this.state.places,\n        port: this.port,\n        host: this.host,\n        realTime: this.state.realTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(Calculator, {\n        updateDistanceBasedOnResponse: this.updateDistanceBasedOnResponse,\n        updateOriginAndDestination: this.updateOriginAndDestination,\n        distance: this.state.distance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Options, {\n        options: this.state.trip.options,\n        config: this.state.config,\n        updateOptions: this.updateOptions,\n        updateHostAndPort: this.updateHostAndPort,\n        updateRealTime: this.updateRealTime,\n        realTime: this.state.realTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Application;\n}(Component);\n\nexport default Application;","map":{"version":3,"sources":["C:\\Users\\Abby\\Desktop\\portfolio\\portfolio\\client\\src\\Components\\Trip-Planner\\components\\Application\\Application.js"],"names":["React","Component","Container","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","Options","Plan","IconContext","IoIosCalculator","MdPeople","MdFlightTakeoff","GoGear","Calculator","get_config","Application","props","state","config","distance","type","version","origin","latitude","longitude","destination","units","trip","title","options","unitName","unitRadius","optimization","map","places","port","window","location","host","activeTab","realTime","updateTrip","bind","updateBasedOnResponse","updateOptions","updateHostAndPort","updatePlaces","updateOriginAndDestination","updateDistanceBasedOnResponse","toggleTab","updateRealTime","setState","parseInt","value","lat_f","long_f","lat_t","long_t","longtitude","field","option","key","addPlace","removePlace","reversePlaces","setFirstPlace","tab","length","place","JSON","stringify","found","findIndex","ele","push","filter","reverse","distances","index","i","style","textDecoration","aStyle","color","size","active"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Container} from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport Options from './Options';\r\nimport Plan from './Plan';\r\nimport {IconContext} from 'react-icons';\r\nimport {IoIosCalculator} from 'react-icons/io';\r\nimport {MdPeople, MdFlightTakeoff} from 'react-icons/md';\r\nimport {GoGear} from 'react-icons/go';\r\n\r\nimport Calculator from './Calculator';\r\nimport {get_config} from '../../api/api';\r\n\r\n/* Renders the application.\r\n * Holds the destinations and options state shared with the trip.\r\n */\r\nclass Application extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            config: {\r\n                \"type\"          : \"config\",\r\n                \"version\"       : 4,\r\n                \"units\"         : [\"kilometers\", \"miles\", \"nautical miles\", \"user defined\"],\r\n                \"optimization\"  : [{\"label\":\"none\", \"description\":\"The trip is not optimized.\"},\r\n                                   {\"label\":\"short\", \"description\":\"Nearest neighbor.\"},\r\n                                   {\"label\":\"shorter\", \"description\":\"2-opt.\"},\r\n                                   {\"label\":\"shortest\", \"description\":\"3-opt.\"}\r\n                ],\r\n                \"attributes\"    : [\"name\", \"id\", \"latitude\", \"longitude\"],\r\n                \"filters\"       : [{\"name\":\"type\",\r\n                                    \"values\":[\"balloonport\", \"heliport\", \"airport\", \"seaplane base\"]},\r\n                                    {\"name\": \"country\",\r\n                                     \"values\": [\"Costa Rica\", \"Japan\", \"Kenya\", \"New Zealand\", \"Spain\", \"United States\"]},\r\n                                    {\"name\": \"continents\", \r\n                                     \"values\": [\"Africa\", \"Antarctica\", \"Asia\", \"Europe\",\r\n                                     \"Oceania\", \"North America\", \"South America\"]}\r\n                ],\r\n                \"maps\"          : [\"svg\", \"kml\"]\r\n              },\r\n            distance: {\r\n                type: \"distance\",\r\n                version: 4,\r\n                origin: {\r\n                    latitude: 0,\r\n                    longitude: 0\r\n                },\r\n                destination: {\r\n                    latitude: 0,\r\n                    longitude: 0\r\n                },\r\n                units: \"miles\",\r\n                distance: 0\r\n            },\r\n            trip: {\r\n                type: \"trip\",\r\n                version: 4,\r\n                title: \"My Trip\",\r\n                options: {\r\n                    units: \"miles\",\r\n                    unitName: \"\",\r\n                    unitRadius: 0,\r\n                    optimization: \"none\",\r\n                    map: \"kml\"\r\n                },\r\n                places: [{\"id\": \"Kab\", \"name\": \"Kabul\", \"latitude\": 34.28, \"longitude\": 69.11},\r\n                {\"id\": \"Tir\", \"name\": \"Tirane\", \"latitude\": 41.18, \"longitude\": 19.49},\r\n                {\"id\": \"Alg\", \"name\": \"Algiers\", \"latitude\": 36.42, \"longitude\": 3.08},\r\n                {\"id\": \"Pag\", \"name\": \"Pago_Pago\", \"latitude\": -14.16, \"longitude\": -170.43},\r\n                {\"id\": \"And\", \"name\": \"Andorra_la_Vella\", \"latitude\": 42.31, \"longitude\": 1.32},\r\n                {\"id\": \"Lua\", \"name\": \"Luanda\", \"latitude\": -8.50, \"longitude\": 13.15},\r\n                {\"id\": \"Wes\", \"name\": \"West_Indies\", \"latitude\": 17.20, \"longitude\": -61.48},\r\n                {\"id\": \"Bue\", \"name\": \"Buenos_Aires\", \"latitude\": -36.30, \"longitude\": -60.00},\r\n                {\"id\": \"Yer\", \"name\": \"Yerevan\", \"latitude\": 40.10, \"longitude\": 44.31},\r\n                {\"id\": \"Ora\", \"name\": \"Oranjestad\", \"latitude\": 12.32, \"longitude\": -70.02},\r\n                {\"id\": \"Can\", \"name\": \"Canberra\", \"latitude\": -35.15, \"longitude\": 149.08},\r\n                {\"id\": \"Vie\", \"name\": \"Vienna\", \"latitude\": 48.12, \"longitude\": 16.22},\r\n                {\"id\": \"Bak\", \"name\": \"Baku\", \"latitude\": 40.29, \"longitude\": 49.56},\r\n                {\"id\": \"Nas\", \"name\": \"Nassau\", \"latitude\": 25.05, \"longitude\": -77.20},\r\n                {\"id\": \"Man\", \"name\": \"Manama\", \"latitude\": 26.10, \"longitude\": 50.30},\r\n                {\"id\": \"Dha\", \"name\": \"Dhaka\", \"latitude\": 23.43, \"longitude\": 90.26},\r\n                {\"id\": \"Bri\", \"name\": \"Bridgetown\", \"latitude\": 13.05, \"longitude\": -59.30},\r\n                {\"id\": \"Min\", \"name\": \"Minsk\", \"latitude\": 53.52, \"longitude\": 27.30},\r\n                {\"id\": \"Bru\", \"name\": \"Brussels\", \"latitude\": 50.51, \"longitude\": 4.21},\r\n                {\"id\": \"Bel\", \"name\": \"Belmopan\", \"latitude\": 17.18, \"longitude\": -88.30},\r\n                {\"id\": \"Por\", \"name\": \"Porto_Novo\", \"latitude\": 6.23, \"longitude\": 2.42},\r\n                {\"id\": \"Thi\", \"name\": \"Thimphu\", \"latitude\": 27.31, \"longitude\": 89.45},\r\n                {\"id\": \"La_\", \"name\": \"La_Paz\", \"latitude\": -16.20, \"longitude\": -68.10},\r\n                {\"id\": \"Sar\", \"name\": \"Sarajevo\", \"latitude\": 43.52, \"longitude\": 18.26},\r\n                {\"id\": \"Gab\", \"name\": \"Gaborone\", \"latitude\": -24.45, \"longitude\": 25.57},\r\n                {\"id\": \"Bra\", \"name\": \"Brasilia\", \"latitude\": -15.47, \"longitude\": -47.55},\r\n                {\"id\": \"Roa\", \"name\": \"Road_Town\", \"latitude\": 18.27, \"longitude\": -64.37},\r\n                {\"id\": \"Sof\", \"name\": \"Sofia\", \"latitude\": 42.45, \"longitude\": 23.20},\r\n                {\"id\": \"Oua\", \"name\": \"Ouagadougou\", \"latitude\": 12.15, \"longitude\": -1.30},\r\n                {\"id\": \"Buj\", \"name\": \"Bujumbura\", \"latitude\": -3.16, \"longitude\": 29.18},\r\n                {\"id\": \"Phn\", \"name\": \"Phnom_Penh\", \"latitude\": 11.33, \"longitude\": 104.55},\r\n                {\"id\": \"Yao\", \"name\": \"Yaounde\", \"latitude\": 3.50, \"longitude\": 11.35},\r\n                {\"id\": \"Ott\", \"name\": \"Ottawa\", \"latitude\": 45.27, \"longitude\": -75.42},\r\n                {\"id\": \"Pra\", \"name\": \"Praia\", \"latitude\": 15.02, \"longitude\": -23.34},\r\n                {\"id\": \"Geo\", \"name\": \"George_Town\", \"latitude\": 19.20, \"longitude\": -81.24},\r\n                {\"id\": \"Ban\", \"name\": \"Bangui\", \"latitude\": 4.23, \"longitude\": 18.35},\r\n                {\"id\": \"N'D\", \"name\": \"N'Djamena\", \"latitude\": 12.10, \"longitude\": 14.59},\r\n                {\"id\": \"San\", \"name\": \"Santiago\", \"latitude\": -33.24, \"longitude\": -70.40},\r\n                {\"id\": \"Bei\", \"name\": \"Beijing\", \"latitude\": 39.55, \"longitude\": 116.20},\r\n                {\"id\": \"Bog\", \"name\": \"Bogota\", \"latitude\": 4.34, \"longitude\": -74.00},\r\n                {\"id\": \"Mor\", \"name\": \"Moroni\", \"latitude\": -11.40, \"longitude\": 43.16},\r\n                {\"id\": \"Bra\", \"name\": \"Brazzaville\", \"latitude\": -4.09, \"longitude\": 15.12},\r\n                {\"id\": \"San\", \"name\": \"San_Jose\", \"latitude\": 9.55, \"longitude\": -84.02},\r\n                {\"id\": \"Yam\", \"name\": \"Yamoussoukro\", \"latitude\": 6.49, \"longitude\": -5.17},\r\n                {\"id\": \"Zag\", \"name\": \"Zagreb\", \"latitude\": 45.50, \"longitude\": 15.58},\r\n                {\"id\": \"Hav\", \"name\": \"Havana\", \"latitude\": 23.08, \"longitude\": -82.22},\r\n                {\"id\": \"Nic\", \"name\": \"Nicosia\", \"latitude\": 35.10, \"longitude\": 33.25},\r\n                {\"id\": \"Pra\", \"name\": \"Prague\", \"latitude\": 50.05, \"longitude\": 14.22},\r\n                {\"id\": \"Kin\", \"name\": \"Kinshasa\", \"latitude\": -4.20, \"longitude\": 15.15},\r\n                {\"id\": \"Cop\", \"name\": \"Copenhagen\", \"latitude\": 55.41, \"longitude\": 12.34},\r\n                {\"id\": \"Dji\", \"name\": \"Djibouti\", \"latitude\": 11.08, \"longitude\": 42.20},\r\n                {\"id\": \"Ros\", \"name\": \"Roseau\", \"latitude\": 15.20, \"longitude\": -61.24},\r\n                {\"id\": \"San\", \"name\": \"Santo_Domingo\", \"latitude\": 18.30, \"longitude\": -69.59},\r\n                {\"id\": \"Dil\", \"name\": \"Dili\", \"latitude\": -8.29, \"longitude\": 125.34},\r\n                {\"id\": \"Qui\", \"name\": \"Quito\", \"latitude\": -0.15, \"longitude\": -78.35},\r\n                {\"id\": \"Cai\", \"name\": \"Cairo\", \"latitude\": 30.01, \"longitude\": 31.14},\r\n                {\"id\": \"Mal\", \"name\": \"Malabo\", \"latitude\": 3.45, \"longitude\": 8.50},\r\n                {\"id\": \"Asm\", \"name\": \"Asmara\", \"latitude\": 15.19, \"longitude\": 38.55},\r\n                {\"id\": \"Tal\", \"name\": \"Tallinn\", \"latitude\": 59.22, \"longitude\": 24.48},\r\n                {\"id\": \"Add\", \"name\": \"Addis_Ababa\", \"latitude\": 9.02, \"longitude\": 38.42},\r\n                {\"id\": \"Sta\", \"name\": \"Stanley\", \"latitude\": -51.40, \"longitude\": -59.51},\r\n                {\"id\": \"Tor\", \"name\": \"Torshavn\", \"latitude\": 62.05, \"longitude\": -6.56},\r\n                {\"id\": \"Suv\", \"name\": \"Suva\", \"latitude\": -18.06, \"longitude\": 178.30},\r\n                {\"id\": \"Hel\", \"name\": \"Helsinki\", \"latitude\": 60.15, \"longitude\": 25.03},\r\n                {\"id\": \"Par\", \"name\": \"Paris\", \"latitude\": 48.50, \"longitude\": 2.20},\r\n                {\"id\": \"Cay\", \"name\": \"Cayenne\", \"latitude\": 5.05, \"longitude\": -52.18},\r\n                {\"id\": \"Pap\", \"name\": \"Papeete\", \"latitude\": -17.32, \"longitude\": -149.34},\r\n                {\"id\": \"Lib\", \"name\": \"Libreville\", \"latitude\": 0.25, \"longitude\": 9.26},\r\n                {\"id\": \"Ban\", \"name\": \"Banjul\", \"latitude\": 13.28, \"longitude\": -16.40},\r\n                {\"id\": \"T'b\", \"name\": \"T'bilisi\", \"latitude\": 41.43, \"longitude\": 44.50},\r\n                {\"id\": \"Ber\", \"name\": \"Berlin\", \"latitude\": 52.30, \"longitude\": 13.25},\r\n                {\"id\": \"Acc\", \"name\": \"Accra\", \"latitude\": 5.35, \"longitude\": -0.06},\r\n                {\"id\": \"Ath\", \"name\": \"Athens\", \"latitude\": 37.58, \"longitude\": 23.46},\r\n                {\"id\": \"Nuu\", \"name\": \"Nuuk\", \"latitude\": 64.10, \"longitude\": -51.35},\r\n                {\"id\": \"Bas\", \"name\": \"Basse-Terre\", \"latitude\": 16.00, \"longitude\": -61.44},\r\n                {\"id\": \"Gua\", \"name\": \"Guatemala\", \"latitude\": 14.40, \"longitude\": -90.22},\r\n                {\"id\": \"St.\", \"name\": \"St._Peter_Port\", \"latitude\": 49.26, \"longitude\": -2.33},\r\n                {\"id\": \"Con\", \"name\": \"Conakry\", \"latitude\": 9.29, \"longitude\": -13.49},\r\n                {\"id\": \"Bis\", \"name\": \"Bissau\", \"latitude\": 11.45, \"longitude\": -15.45},\r\n                {\"id\": \"Geo\", \"name\": \"Georgetown\", \"latitude\": 6.50, \"longitude\": -58.12},\r\n                {\"id\": \"Por\", \"name\": \"Port-au-Prince\", \"latitude\": 18.40, \"longitude\": -72.20},\r\n                {\"id\": \"Teg\", \"name\": \"Tegucigalpa\", \"latitude\": 14.05, \"longitude\": -87.14},\r\n                {\"id\": \"Bud\", \"name\": \"Budapest\", \"latitude\": 47.29, \"longitude\": 19.05},\r\n                {\"id\": \"Rey\", \"name\": \"Reykjavik\", \"latitude\": 64.10, \"longitude\": -21.57},\r\n                {\"id\": \"New\", \"name\": \"New_Delhi\", \"latitude\": 28.37, \"longitude\": 77.13},\r\n                {\"id\": \"Jak\", \"name\": \"Jakarta\", \"latitude\": -6.09, \"longitude\": 106.49},\r\n                {\"id\": \"Teh\", \"name\": \"Tehran\", \"latitude\": 35.44, \"longitude\": 51.30},\r\n                {\"id\": \"Bag\", \"name\": \"Baghdad\", \"latitude\": 33.20, \"longitude\": 44.30},\r\n                {\"id\": \"Dub\", \"name\": \"Dublin\", \"latitude\": 53.21, \"longitude\": -6.15},\r\n                {\"id\": \"Jer\", \"name\": \"Jerusalem\", \"latitude\": 31.71, \"longitude\": -35.10},\r\n                {\"id\": \"Rom\", \"name\": \"Rome\", \"latitude\": 41.54, \"longitude\": 12.29},\r\n                {\"id\": \"Kin\", \"name\": \"Kingston\", \"latitude\": 44.23, \"longitude\": -76.50},\r\n                {\"id\": \"Amm\", \"name\": \"Amman\", \"latitude\": 31.57, \"longitude\": 35.52},\r\n                {\"id\": \"Ast\", \"name\": \"Astana\", \"latitude\": 51.10, \"longitude\": 71.30},\r\n                {\"id\": \"Nai\", \"name\": \"Nairobi\", \"latitude\": -1.17, \"longitude\": 36.48},\r\n                {\"id\": \"Tar\", \"name\": \"Tarawa\", \"latitude\": 1.30, \"longitude\": 173.00},\r\n                {\"id\": \"Kuw\", \"name\": \"Kuwait\", \"latitude\": 29.30, \"longitude\": 48.00},\r\n                {\"id\": \"Bis\", \"name\": \"Bishkek\", \"latitude\": 42.54, \"longitude\": 74.46},\r\n                {\"id\": \"Vie\", \"name\": \"Vientiane\", \"latitude\": 17.58, \"longitude\": 102.36},\r\n                {\"id\": \"Rig\", \"name\": \"Riga\", \"latitude\": 56.53, \"longitude\": 24.08},\r\n                {\"id\": \"Bei\", \"name\": \"Beirut\", \"latitude\": 33.53, \"longitude\": 35.31},\r\n                {\"id\": \"Mas\", \"name\": \"Maseru\", \"latitude\": -29.18, \"longitude\": 27.30},\r\n                {\"id\": \"Mon\", \"name\": \"Monrovia\", \"latitude\": 6.18, \"longitude\": -10.47},\r\n                {\"id\": \"Vad\", \"name\": \"Vaduz\", \"latitude\": 47.08, \"longitude\": 9.31},\r\n                {\"id\": \"Vil\", \"name\": \"Vilnius\", \"latitude\": 54.38, \"longitude\": 25.19},\r\n                {\"id\": \"Lux\", \"name\": \"Luxembourg\", \"latitude\": 49.37, \"longitude\": 6.09},\r\n                {\"id\": \"Ant\", \"name\": \"Antananarivo\", \"latitude\": -18.55, \"longitude\": 47.31},\r\n                {\"id\": \"Lil\", \"name\": \"Lilongwe\", \"latitude\": -14.00, \"longitude\": 33.48},\r\n                {\"id\": \"Kua\", \"name\": \"Kuala_Lumpur\", \"latitude\": 3.09, \"longitude\": 101.41},\r\n                {\"id\": \"Mal\", \"name\": \"Male\", \"latitude\": 4.00, \"longitude\": 73.28},\r\n                {\"id\": \"Bam\", \"name\": \"Bamako\", \"latitude\": 12.34, \"longitude\": -7.55},\r\n                {\"id\": \"Val\", \"name\": \"Valletta\", \"latitude\": 35.54, \"longitude\": 14.31},\r\n                {\"id\": \"For\", \"name\": \"Fort-de-France\", \"latitude\": 14.36, \"longitude\": -61.02},\r\n                {\"id\": \"Nou\", \"name\": \"Nouakchott\", \"latitude\": -20.10, \"longitude\": 57.30},\r\n                {\"id\": \"Mam\", \"name\": \"Mamoudzou\", \"latitude\": -12.48, \"longitude\": 45.14},\r\n                {\"id\": \"Mex\", \"name\": \"Mexico\", \"latitude\": 19.20, \"longitude\": -99.10},\r\n                {\"id\": \"Pal\", \"name\": \"Palikir\", \"latitude\": 6.55, \"longitude\": 158.09},\r\n                {\"id\": \"Map\", \"name\": \"Maputo\", \"latitude\": -25.58, \"longitude\": 32.32},\r\n                {\"id\": \"Yan\", \"name\": \"Yangon\", \"latitude\": 16.45, \"longitude\": 96.20},\r\n                {\"id\": \"Win\", \"name\": \"Windhoek\", \"latitude\": -22.35, \"longitude\": 17.04},\r\n                {\"id\": \"Kat\", \"name\": \"Kathmandu\", \"latitude\": 27.45, \"longitude\": 85.20},\r\n                {\"id\": \"Ams\", \"name\": \"Amsterdam\", \"latitude\": 52.23, \"longitude\": 4.54},\r\n                {\"id\": \"Nou\", \"name\": \"Noumea\", \"latitude\": -22.17, \"longitude\": 166.30},\r\n                {\"id\": \"Wel\", \"name\": \"Wellington\", \"latitude\": -41.19, \"longitude\": 174.46},\r\n                {\"id\": \"Man\", \"name\": \"Managua\", \"latitude\": 12.06, \"longitude\": -86.20},\r\n                {\"id\": \"Nia\", \"name\": \"Niamey\", \"latitude\": 13.27, \"longitude\": 2.06},\r\n                {\"id\": \"Abu\", \"name\": \"Abuja\", \"latitude\": 9.05, \"longitude\": 7.32},\r\n                {\"id\": \"Pyo\", \"name\": \"Pyongyang\", \"latitude\": 39.09, \"longitude\": 125.30},\r\n                {\"id\": \"Sai\", \"name\": \"Saipan\", \"latitude\": 15.12, \"longitude\": 145.45},\r\n                {\"id\": \"Osl\", \"name\": \"Oslo\", \"latitude\": 59.55, \"longitude\": 10.45},\r\n                {\"id\": \"Mas\", \"name\": \"Masqat\", \"latitude\": 23.37, \"longitude\": 58.36},\r\n                {\"id\": \"Isl\", \"name\": \"Islamabad\", \"latitude\": 33.40, \"longitude\": 73.10},\r\n                {\"id\": \"Kor\", \"name\": \"Koror\", \"latitude\": 7.20, \"longitude\": 134.28},\r\n                {\"id\": \"Pan\", \"name\": \"Panama\", \"latitude\": 9.00, \"longitude\": -79.25},\r\n                {\"id\": \"Asu\", \"name\": \"Asuncion\", \"latitude\": -25.10, \"longitude\": -57.30},\r\n                {\"id\": \"Lim\", \"name\": \"Lima\", \"latitude\": -12.00, \"longitude\": -77.00},\r\n                {\"id\": \"Man\", \"name\": \"Manila\", \"latitude\": 14.40, \"longitude\": 121.03},\r\n                {\"id\": \"War\", \"name\": \"Warsaw\", \"latitude\": 52.13, \"longitude\": 21.00},\r\n                {\"id\": \"Lis\", \"name\": \"Lisbon\", \"latitude\": 38.42, \"longitude\": -9.10},\r\n                {\"id\": \"San\", \"name\": \"San_Juan\", \"latitude\": 18.28, \"longitude\": -66.07},\r\n                {\"id\": \"Doh\", \"name\": \"Doha\", \"latitude\": 25.15, \"longitude\": 51.35},\r\n                {\"id\": \"Seo\", \"name\": \"Seoul\", \"latitude\": 37.31, \"longitude\": 126.58},\r\n                {\"id\": \"Buc\", \"name\": \"Bucuresti\", \"latitude\": 44.27, \"longitude\": 26.10},\r\n                {\"id\": \"Mos\", \"name\": \"Moskva\", \"latitude\": 55.45, \"longitude\": 37.35},\r\n                {\"id\": \"Kig\", \"name\": \"Kigali\", \"latitude\": -1.59, \"longitude\": 30.04},\r\n                {\"id\": \"Bas\", \"name\": \"Basseterre\", \"latitude\": 17.17, \"longitude\": -62.43},\r\n                {\"id\": \"Cas\", \"name\": \"Castries\", \"latitude\": 14.02, \"longitude\": -60.58},\r\n                {\"id\": \"Sai\", \"name\": \"Saint-Pierre\", \"latitude\": 46.46, \"longitude\": -56.12},\r\n                {\"id\": \"Api\", \"name\": \"Apia\", \"latitude\": -13.50, \"longitude\": -171.50},\r\n                {\"id\": \"San\", \"name\": \"San_Marino\", \"latitude\": 43.55, \"longitude\": 12.30},\r\n                {\"id\": \"Sao\", \"name\": \"Sao_Tome\", \"latitude\": 0.10, \"longitude\": 6.39},\r\n                {\"id\": \"Riy\", \"name\": \"Riyadh\", \"latitude\": 24.41, \"longitude\": 46.42},\r\n                {\"id\": \"Dak\", \"name\": \"Dakar\", \"latitude\": 14.34, \"longitude\": -17.29},\r\n                {\"id\": \"Fre\", \"name\": \"Freetown\", \"latitude\": 8.30, \"longitude\": -13.17},\r\n                {\"id\": \"Bra\", \"name\": \"Bratislava\", \"latitude\": 48.10, \"longitude\": 17.07},\r\n                {\"id\": \"Lju\", \"name\": \"Ljubljana\", \"latitude\": 46.04, \"longitude\": 14.33},\r\n                {\"id\": \"Hon\", \"name\": \"Honiara\", \"latitude\": -9.27, \"longitude\": 159.57},\r\n                {\"id\": \"Mog\", \"name\": \"Mogadishu\", \"latitude\": 2.02, \"longitude\": 45.25},\r\n                {\"id\": \"Pre\", \"name\": \"Pretoria\", \"latitude\": -25.44, \"longitude\": 28.12},\r\n                {\"id\": \"Mad\", \"name\": \"Madrid\", \"latitude\": 40.25, \"longitude\": -3.45},\r\n                {\"id\": \"Kha\", \"name\": \"Khartoum\", \"latitude\": 15.31, \"longitude\": 32.35},\r\n                {\"id\": \"Par\", \"name\": \"Paramaribo\", \"latitude\": 5.50, \"longitude\": -55.10},\r\n                {\"id\": \"Mba\", \"name\": \"Mbabane\", \"latitude\": -26.18, \"longitude\": 31.06},\r\n                {\"id\": \"Sto\", \"name\": \"Stockholm\", \"latitude\": 59.20, \"longitude\": 18.03},\r\n                {\"id\": \"Ber\", \"name\": \"Bern\", \"latitude\": 46.57, \"longitude\": 7.28},\r\n                {\"id\": \"Dam\", \"name\": \"Damascus\", \"latitude\": 33.30, \"longitude\": 36.18},\r\n                {\"id\": \"Dus\", \"name\": \"Dushanbe\", \"latitude\": 38.33, \"longitude\": 68.48},\r\n                {\"id\": \"Ban\", \"name\": \"Bangkok\", \"latitude\": 13.45, \"longitude\": 100.35},\r\n                {\"id\": \"Lom\", \"name\": \"Lome\", \"latitude\": 6.09, \"longitude\": 1.20},\r\n                {\"id\": \"Nuk\", \"name\": \"Nuku'alofa\", \"latitude\": -21.10, \"longitude\": -174.00},\r\n                {\"id\": \"Tun\", \"name\": \"Tunis\", \"latitude\": 36.50, \"longitude\": 10.11},\r\n                {\"id\": \"Ank\", \"name\": \"Ankara\", \"latitude\": 39.57, \"longitude\": 32.54},\r\n                {\"id\": \"Ash\", \"name\": \"Ashgabat\", \"latitude\": 38.00, \"longitude\": 57.50},\r\n                {\"id\": \"Fun\", \"name\": \"Funafuti\", \"latitude\": -8.31, \"longitude\": 179.13},\r\n                {\"id\": \"Kam\", \"name\": \"Kampala\", \"latitude\": 0.20, \"longitude\": 32.30},\r\n                {\"id\": \"Kie\", \"name\": \"Kiev\", \"latitude\": 50.30, \"longitude\": 30.28},\r\n                {\"id\": \"Abu\", \"name\": \"Abu_Dhabi\", \"latitude\": 24.28, \"longitude\": 54.22},\r\n                {\"id\": \"Lon\", \"name\": \"London\", \"latitude\": 51.36, \"longitude\": -0.05},\r\n                {\"id\": \"Dod\", \"name\": \"Dodoma\", \"latitude\": -6.08, \"longitude\": 35.45},\r\n                {\"id\": \"Was\", \"name\": \"Washington_DC\", \"latitude\": 39.91, \"longitude\": -77.02},\r\n                {\"id\": \"Cha\", \"name\": \"Charlotte_Amalie\", \"latitude\": 18.21, \"longitude\": -64.56},\r\n                {\"id\": \"Mon\", \"name\": \"Montevideo\", \"latitude\": -34.50, \"longitude\": -56.11},\r\n                {\"id\": \"Tas\", \"name\": \"Tashkent\", \"latitude\": 41.20, \"longitude\": 69.10},\r\n                {\"id\": \"Por\", \"name\": \"Port-Vila\", \"latitude\": -17.45, \"longitude\": 168.18},\r\n                {\"id\": \"Car\", \"name\": \"Caracas\", \"latitude\": 10.30, \"longitude\": -66.55},\r\n                {\"id\": \"Han\", \"name\": \"Hanoi\", \"latitude\": 21.05, \"longitude\": 105.55},\r\n                {\"id\": \"Bel\", \"name\": \"Belgrade\", \"latitude\": 44.50, \"longitude\": 20.37},\r\n                {\"id\": \"Lus\", \"name\": \"Lusaka\", \"latitude\": -15.28, \"longitude\": 28.16},\r\n                {\"id\": \"Har\", \"name\": \"Harare\", \"latitude\": -17.43, \"longitude\": 31.02}],\r\n                map: null\r\n            },\r\n            port: window.location.port,\r\n            host: window.location.host,\r\n            activeTab: '1',\r\n            realTime: false\r\n        };\r\n        this.updateTrip = this.updateTrip.bind(this);\r\n        this.updateBasedOnResponse = this.updateBasedOnResponse.bind(this);\r\n        this.updateOptions = this.updateOptions.bind(this);\r\n        this.updateHostAndPort = this.updateHostAndPort.bind(this);\r\n        this.updatePlaces = this.updatePlaces.bind(this);\r\n        this.updateOriginAndDestination = this.updateOriginAndDestination.bind(this);\r\n        this.updateDistanceBasedOnResponse = this.updateDistanceBasedOnResponse.bind(this);\r\n        this.toggleTab = this.toggleTab.bind(this);\r\n        this.updateRealTime = this.updateRealTime.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        // get_config().then(\r\n        //     config => {\r\n        //         this.setState({\r\n        //             config: config\r\n        //         })\r\n        //     }\r\n        // );\r\n    }\r\n\r\n    updateHostAndPort(host, port) {\r\n        port = port ? port : 0;\r\n        this.setState({port: parseInt(port, 10)});\r\n        host = host ? host : \"black-bottle.cs.colostate.edu\";\r\n        this.setState({host: host});\r\n\r\n        // get_config(this.port, this.host).then(\r\n        //     config => {\r\n        //         this.setState({\r\n        //             config: config\r\n        //         })\r\n        //     }\r\n        // );\r\n    }\r\n\r\n    updateDistanceBasedOnResponse(value) {\r\n        this.setState({distance: value});\r\n    }\r\n\r\n    updateOriginAndDestination(lat_f, long_f, lat_t, long_t) {\r\n        let distance = this.state.distance;\r\n        distance.origin = {latitude: lat_f, longtitude: long_f};\r\n        distance.destination = {latitude: lat_t, longtitude: long_t};\r\n        this.setState(distance);\r\n    }\r\n\r\n    updateTrip(field, value) {\r\n        let trip = this.state.trip;\r\n        trip[field] = value;\r\n        this.setState(trip);\r\n    }\r\n\r\n    updateBasedOnResponse(value) {\r\n        this.setState({trip: value});\r\n    }\r\n\r\n    updateOptions(option, value) {\r\n        let trip = this.state.trip;\r\n        trip.options[option] = value;\r\n        this.setState(trip);\r\n    }\r\n\r\n    //key can only be {\"add\", \"remove\", \"reverse\", \"origin\"}, and perform accordingly\r\n    updatePlaces(value, key) {\r\n        if (key === \"add\") {\r\n            this.addPlace(value);\r\n        }\r\n        else if (key === \"remove\") {\r\n            this.removePlace(value);\r\n        }\r\n        else if  (key === \"reverse\") {\r\n            this.reversePlaces();\r\n        }\r\n        else if  (key === \"origin\") {\r\n            this.setFirstPlace(value);\r\n        }\r\n    }\r\n\r\n    updateRealTime(value) {\r\n        value = (value === 'true');\r\n        this.setState({realTime: value});\r\n    }\r\n\r\n    toggleTab(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    addPlace(value) {\r\n        if (this.state.trip.places.length === 0) {\r\n            this.state.trip.places = [value];\r\n        }\r\n        else {\r\n            const place = JSON.stringify(value);\r\n            let found = this.state.trip.places.findIndex(function(ele){\r\n                return JSON.stringify(ele) === place;\r\n            });\r\n            if (found === -1)  {\r\n                this.state.trip.places.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    removePlace(value){\r\n        const place = JSON.stringify(value);\r\n        let trip = this.state.trip;\r\n        if (this.state.trip.places.length !== 0) {\r\n            trip[\"places\"] = trip[\"places\"].filter(function(ele){\r\n                return JSON.stringify(ele) !== place;\r\n            });\r\n        }\r\n        this.setState(trip);\r\n    }\r\n\r\n    reversePlaces() {\r\n        let trip = this.state.trip;\r\n        trip.places.reverse();\r\n        trip.distances.reverse();\r\n        this.setState(trip);\r\n    }\r\n\r\n    setFirstPlace(index) {\r\n        let places = [];\r\n        let distances = [];\r\n        for (let i = 0; i < this.state.trip.places.length; i++) {\r\n            places.push(this.state.trip.places[index]);\r\n            distances.push(this.state.trip.distances[index]);\r\n            index = (index + 1) % this.state.trip.places.length;\r\n        }\r\n        let trip = this.state.trip;\r\n        trip.places = places;\r\n        trip.distances = distances;\r\n        this.setState(trip);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.config) {\r\n            return <div/>\r\n        }\r\n        const style ={textDecoration: 'none'};\r\n        const aStyle ={color: '#255f35', textDecoration: 'none'};\r\n        return (\r\n            <React.Fragment>\r\n                <IconContext.Provider value={{ size: '2.4em' }}>\r\n                <Container>\r\n                    <Nav tabs>\r\n                        <Col md ='5'><h4 style={{'position': 'absolute', 'bottom':'0px'}}><b>Trip Planner Demo (T23, CS314)</b></h4></Col>\r\n                        <Col md ='7'>\r\n                            <Row className={'float-right'}>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '1' })}\r\n                                        onClick={() => { this.toggleTab('1');}}\r\n                                        style={(this.state.activeTab === '1')? aStyle : style}\r\n                                    >\r\n                                        <MdFlightTakeoff/>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '2' })}\r\n                                        onClick={() => { this.toggleTab('2'); }}\r\n                                        style={(this.state.activeTab === '2')? aStyle : style}\r\n                                    >\r\n                                        <IoIosCalculator/>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '3' })}\r\n                                        onClick={() => { this.toggleTab('3'); }}\r\n                                        style={(this.state.activeTab === '3')? aStyle : style}\r\n                                    >\r\n                                        <GoGear/>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Row>\r\n                        </Col>\r\n                    </Nav>\r\n                </Container>\r\n            </IconContext.Provider>\r\n                <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                        <Plan\r\n                            updateBasedOnResponse={this.updateBasedOnResponse}\r\n                            updatePlaces={this.updatePlaces}\r\n                            updateTrip={this.updateTrip}\r\n                            config={this.state.config}\r\n                            trip={this.state.trip}\r\n                            places={this.state.places}\r\n                            port={this.port}\r\n                            host={this.host}\r\n                            realTime = {this.state.realTime}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <Calculator\r\n                            updateDistanceBasedOnResponse={this.updateDistanceBasedOnResponse}\r\n                            updateOriginAndDestination={this.updateOriginAndDestination}\r\n                            distance={this.state.distance}\r\n                        />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"3\">\r\n                        <Options\r\n                            options={this.state.trip.options}\r\n                            config={this.state.config}\r\n                            updateOptions={this.updateOptions}\r\n                            updateHostAndPort={this.updateHostAndPort}\r\n                            updateRealTime={this.updateRealTime}\r\n                            realTime = {this.state.realTime}\r\n                        />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n"]},"metadata":{},"sourceType":"module"}